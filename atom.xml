<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>저장하고 까먹자</title>
  
  
  <link href="https://jungguji.github.io/atom.xml" rel="self"/>
  
  <link href="https://jungguji.github.io/"/>
  <updated>2022-03-31T13:44:43.000Z</updated>
  <id>https://jungguji.github.io/</id>
  
  <author>
    <name>Junggu Ji</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>RequestBody 바인딩</title>
    <link href="https://jungguji.github.io/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/"/>
    <id>https://jungguji.github.io/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/</id>
    <published>2022-03-31T13:44:43.000Z</published>
    <updated>2022-03-31T13:44:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>이전에 작성한 글 중에 <a href="https://jungguji.github.io/2021/02/05/Requestbody-Annotation-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%84%EC%9A%94/">@Requestbody Annotation 사용 시 기본 생성자 필요</a> 라는<br>글을 올린 적이 있는데 글의 마지막에 보면</p><blockquote><p>@Requestbody가 jackson 라이브러리를 이용해 매핑하기 때문이다.</p><footer><strong>JG.JI</strong><cite>@Requestbody Annotation 사용 시 기본 생성자 필요</cite></footer></blockquote><br /><p>라는 결론으로 글을 마무리 하였는데, <a href="https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard">김영한님의 강의</a>에서 해당 내용과 관련해서 자세하게 알려주시는 부분이 있어, 해당 내용을 정리해본다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><p>우선 Spring에서는 Controller에서 @RequestBody로 넘어오는 파라미터들에 대해서 내부적으로 ObjectMapper를 이용해 JSON 데이터를 우리가 만든 DTO 객체로 변환시켜주고,<br>@ResponseBody인 경우엔, DTO 객체를 JSON 데이터로 변환해서 클라이언트에 넘겨준다.</p><p>이렇게해서 해소 될 궁금증이었으면 이 글을 읽으러 오지 않았을테니, 해당 내용에 대하여 코드 레벨에서 자세히 알아보기로 한다.</p><p>우선, Spring MVC의 동작 순서를 간략하게 서술하자면(구글에 검색하면 훌륭한 분들이 작성하신 훌륭한 글들이 많으므로)</p><ol><li>클라이언트에서 요청이 넘어오면 FrontController 역할을 수행하는 DispatcherServlet에서 먼저 확인해서,</li><li>핸들러 매핑 리스트 중 해당 요청을 처리 할 수 있는 핸들러를 가져오고,</li><li>핸들러 어댑터 리스트 중에서 해당 핸들러를 처리 할 수 있는 핸들러 어댑터를 가져와서,</li><li>해당 어댑터에서 우리가 만든 컨트롤러에 호출해서 비즈니스 로직을 처리 한 후,</li><li>리턴되는 데이터에 맞게 뷰 리졸버나 메시지컨버터가 동작하고,</li><li>알맞게 클라이언트로 반환된다.</li></ol><p>여기서, @RequestMapping에 대한 request는 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.html">RequestMappingHandlerAdapter</a>에서 처리하는데<br>이 RequestMappingHandlerAdapter는<br>    1. byte[]를 처리하기 위한 ByteArrayHttpMessageConverter<br>    2. String을 처리하기 위한 StringHttpMessageConverter<br>    3. json을 처리하기 위한 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/index.html?org/springframework/http/converter/json/MappingJackson2HttpMessageConverter.html">MappingJackson2HttpMessageConverter</a><br>등을 가지고 있다.</p><h3 id="RequestMappingHandlerAdapter에-설정된-MessageConverter들"><a href="#RequestMappingHandlerAdapter에-설정된-MessageConverter들" class="headerlink" title="RequestMappingHandlerAdapter에 설정된 MessageConverter들"></a>RequestMappingHandlerAdapter에 설정된 MessageConverter들</h3><img src="/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/1_RequestMappingHandlerAdapter_messageConverters.JPG" class="" title="RequestBody 바인딩 RequestMappingHandlerAdapter에 설정된 MessageConverter들 " alt="RequestMappingHandlerAdapter에 설정된 MessageConverter들"><br /><p>그리고 자신이 가지고 있는 ArgumentResolver들 중<br>@RequestBody형식으로 들어오는 파라미터를 처리하기 위해 RequestResponseBodyMethodProcessor 라는 ArgumentResolver를 호출한다.</p><h3 id="RequestMappingHandlerAdapter에-설정된-ArgumentResolver들"><a href="#RequestMappingHandlerAdapter에-설정된-ArgumentResolver들" class="headerlink" title="RequestMappingHandlerAdapter에 설정된 ArgumentResolver들"></a>RequestMappingHandlerAdapter에 설정된 ArgumentResolver들</h3><img src="/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/2_RequestMappingHandlerAdapter_ArgumentResolvers.JPG" class="" title="RequestBody 바인딩"><br /><p>이 RequestResponseBodyMethodProcessor의 readWithMessageConverters 메서드에서 메시지 컨버터 리스트를 loop 돌면서<br>대상 클래스 타입과 미디어 타입 등을 체크해서 알맞은 메시지 컨버터를 호출해서 사용하는데<br>이 때 호출되는 MessageConverter가 MappingJackson2HttpMessageConverter라는 MessageConverter이다.</p><h3 id="요청을-처리-할-수-있는-MessageConverter-호출"><a href="#요청을-처리-할-수-있는-MessageConverter-호출" class="headerlink" title="요청을 처리 할 수 있는 MessageConverter 호출"></a>요청을 처리 할 수 있는 MessageConverter 호출</h3><img src="/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/3_AbstractMessageConverterMethodArgumentResolver_readWithMessageConverters.JPG" class="" title="RequestBody 바인딩"><ol><li>MessageConverter의 canRead() 메서드로 해당 요청을 처리 할 수 있는 컨버터 인지 확인.</li><li>처리 할 수 있으면 read() 메서드로 메시지에서 객체를 읽고 반환한다.</li></ol><br /><p>MappingJackson2HttpMessageConverter에서는 최종적으로 readJavaType 메서드가 호출되는데 이 때 objectMapper를 사용해서 json 데이터를 DTO 객체로 변환하는 것을 볼 수 있다.</p><h3 id="ObjectMapper를-이용해서-JSON데이터를-변환하는-부분"><a href="#ObjectMapper를-이용해서-JSON데이터를-변환하는-부분" class="headerlink" title="ObjectMapper를 이용해서 JSON데이터를 변환하는 부분"></a>ObjectMapper를 이용해서 JSON데이터를 변환하는 부분</h3><img src="/2022/03/31/RequestBody-%EB%B0%94%EC%9D%B8%EB%94%A9/4_AbstractJackson2HttpMessageConverter_readJavaType.JPG" class="" title="RequestBody 바인딩"><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>보이지 않는 곳에서 이렇게 많은 부분을 스프링에서 처리해주고 있었기 때문에 우리는 Controller에서 편하게 파라미터를 사용 할 수 있고, JSON 데이터도 바로 객체로 받을 수 있는 것이었다.<br>이런 내용을 알아도, 몰라도 결국 같은 방식으로 개발 하겠지만… 언젠가 도움이 되겠거니 생각하고 지금은 궁금증을 해결 했다는 것에 대해 만족한다.<br>이 글을 읽는 다른 분들도 필자와 같은 궁금증이 있었다면 조금이나마 해소가 됐길 바라며..</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://velog.io/@conatuseus/RequestBody%EC%97%90-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90%EB%8A%94-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%8">https://velog.io/@conatuseus/RequestBody%EC%97%90-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90%EB%8A%94-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%8</a></li><li><a href="https://csy7792.tistory.com/317">https://csy7792.tistory.com/317</a></li><li><a href="https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1">김영한 - 스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;이전에 작성한 글 중에 &lt;a href=&quot;https://jungguji.github.io/2021/02/05/Requestbod</summary>
      
    
    
    
    
    <category term="spring" scheme="https://jungguji.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>content-type application/x-www-form-urlencoded는 POST방식으로만</title>
    <link href="https://jungguji.github.io/2021/11/21/content-type-application-x-www-form-urlencoded%EB%8A%94-POST%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C%EB%A7%8C/"/>
    <id>https://jungguji.github.io/2021/11/21/content-type-application-x-www-form-urlencoded%EB%8A%94-POST%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C%EB%A7%8C/</id>
    <published>2021-11-21T13:18:58.000Z</published>
    <updated>2021-11-21T13:18:58.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>오늘도 어김없이 영한님의 스프링 MVC 강의를 듣고 있었는데, html form 데이터를 body에 보낼 때는 post 방식 밖에 안된다는 말씀을 하시기에…<br>‘그럼 GET 방식도 안된다는건가?’ 라는 궁금증이 들어서 직접 확인해본 결과에 대해 작성한다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><p>우선… 기본적으로 지금 필요한 GET방식과 POST방식의 차이점만을 다시 상기해보자면, GET방식은 데이터가 URL의 query string으로 들어간다는 것과,<br>POST방식은 데이터가 http message-body에 들어간다는 차이만 알아두면 될 것 같다. (다른 많은 차이가 있지만)</p><p>그렇기 때문에 우리가 html form 태그 에서 method attribute에 GET라고 작성한 후 데이터를 submit하면 데이터는 query string에 담겨 서버로 전송되고<br>POST라고 작성한 후 데이터를 submit하면 데이터는 message-body에 담겨서 서버로 전성되고 이 때 content-type은 application/x-www-form-urlencoded로 전송된다.</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;/request-param&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span>&gt;</span></span><br><span class="line">    username: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> /&gt;</span></span><br><span class="line">    age:      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;age&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span>전송<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="/2021/11/21/content-type-application-x-www-form-urlencoded%EB%8A%94-POST%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C%EB%A7%8C/1.JPG" class="" title="content-type application&#x2F;x-www-form-urlencoded는 POST방식으로만"><p>그럼 method는 GET이면서 content-type은 application/x-www-form-urlencoded 일 경우엔 어떻게 될까?</p><p>postman으로 아래처럼 실행해본 결과 보는 것과 같이 400 error가 응답되며 요청에 실패하였다.</p><img src="/2021/11/21/content-type-application-x-www-form-urlencoded%EB%8A%94-POST%EB%B0%A9%EC%8B%9D%EC%9C%BC%EB%A1%9C%EB%A7%8C/2.JPG" class="" title="content-type application&#x2F;x-www-form-urlencoded는 POST방식으로만"><p>어째서 이런 일이 발생하였나를 코드 레벨에서 확인해보니…</p><p>tomcat의 Request class에 있는 <a href="https://tomcat.apache.org/tomcat-8.5-doc/api/org/apache/catalina/connector/Request.html#parseParameters()">parseParameters()</a>라는 메서드에서 넘어온 데이터를 parsing 하는데,<br>이 때 http method가 post인지 확인하고 post가 아니라면 message-body의 데이터를 파싱 할 수 없게 되어 있는 것을 확인했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>( !getConnector().isParseBodyMethod(getMethod()) ) &#123;</span><br><span class="line">    success = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 이 아래부턴 Connector.java</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">boolean</span> <span class="title">isParseBodyMethod</span><span class="params">(String method)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parseBodyMethodsSet.contains(method);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">null</span> == parseBodyMethodsSet) &#123;</span><br><span class="line">    setParseBodyMethods(getParseBodyMethods());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Set list of HTTP methods which should allow body parameter</span></span><br><span class="line"><span class="comment"> * parsing. This defaults to &lt;code&gt;POST&lt;/code&gt;.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> methods Comma separated list of HTTP method names</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setParseBodyMethods</span><span class="params">(String methods)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    HashSet&lt;String&gt; methodSet = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">null</span> != methods) &#123;</span><br><span class="line">        methodSet.addAll(Arrays.asList(methods.split(<span class="string">&quot;\\s*,\\s*&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (methodSet.contains(<span class="string">&quot;TRACE&quot;</span>)) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(sm.getString(<span class="string">&quot;coyoteConnector.parseBodyMethodNoTrace&quot;</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>.parseBodyMethods = methods;</span><br><span class="line">    <span class="keyword">this</span>.parseBodyMethodsSet = methodSet;</span><br><span class="line">    setProperty(<span class="string">&quot;parseBodyMethods&quot;</span>, methods);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> the HTTP methods which will support body parameters parsing</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getParseBodyMethods</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.parseBodyMethods;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Comma-separated list of HTTP methods that will be parsed according</span></span><br><span class="line"><span class="comment"> * to POST-style rules for application/x-www-form-urlencoded request bodies.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> String parseBodyMethods = <span class="string">&quot;POST&quot;</span>;</span><br></pre></td></tr></table></figure><p>위에 정리한 것 처럼</p><ol><li>isParseBodyMethod()에서 지금 request의 method가 body를 파싱 할 수 있는 메서드 인지 확인하는데, 이 때 가능한 method들은 인스턴스 변수 parseBodyMethodsSet에 저장되어 있고,</li><li>인스턴스 변수 parseBodyMethodsSet는 setParseBodyMethods() 메서드에서 저장되고 있고~</li><li>parseBodyMethodsSet가 null인 경우에</li><li>setParseBodyMethods(getParseBodyMethods()) 메서드를 실행해서 이 때 method를 저장 시키는데,</li><li>getParseBodyMethods() 메서드를 호출하면</li><li>인스턴스변수 parseBodyMethods를 return 하는데</li><li>이 때 이 인스턴스 변수 parseBodyMethods에는 이미 “POST”로 method가 지정되어 있기 때문에</li><li>GET방식 일 경우에는 message-body를 파싱 할 수 있는 method가 아닌 것으로 처리 되므로~</li><li>파싱 할 수 없다는 에러 메시지를 출력하면서 프로세스가 끝이난다.</li></ol><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>생각해보면… content-type은 message-body이 어떤 형식의 데이터로 담겨 있는가를 알려주는 일종의 os의 파일 확장자같은 개념인데<br>당연히 get방식의 경우 message-body에 데이터가 담기는 것이 아니니 get방식으로 content-type만 application/x-www-form-urlencoded로 한다고 될 턱이 없는데<br>강의를 듣기만 했을 때는 왜 생각하지 못했는 지 모르겠다.. 머리가 나쁘면 몸이 고생이라더니 옛말에 틀린 말이 없다.</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Content-Type">https://developer.mozilla.org/ko/docs/Web/HTTP/Headers/Content-Type</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc7231#section-3.1.1.5">https://datatracker.ietf.org/doc/html/rfc7231#section-3.1.1.5</a></li><li><a href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html">https://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;오늘도 어김없이 영한님의 스프링 MVC 강의를 듣고 있었는데, html form 데이터를 body에 보낼 때는 post 방식 </summary>
      
    
    
    
    
    <category term="spring" scheme="https://jungguji.github.io/tags/spring/"/>
    
    <category term="servlet" scheme="https://jungguji.github.io/tags/servlet/"/>
    
    <category term="강의" scheme="https://jungguji.github.io/tags/%EA%B0%95%EC%9D%98/"/>
    
  </entry>
  
  <entry>
    <title>spring에서 request header를 parsing 하는 법</title>
    <link href="https://jungguji.github.io/2021/11/15/spring%EC%97%90%EC%84%9C-request-header%EB%A5%BC-parsing-%ED%95%98%EB%8A%94-%EB%B2%95/"/>
    <id>https://jungguji.github.io/2021/11/15/spring%EC%97%90%EC%84%9C-request-header%EB%A5%BC-parsing-%ED%95%98%EB%8A%94-%EB%B2%95/</id>
    <published>2021-11-15T12:44:15.000Z</published>
    <updated>2021-11-15T12:44:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>우선 사과의 말씀부터 올린다. 제목은 ‘spring에서~’ 지만 정확히는 tomcat에서 ~ 로 보는 것이 맞다.</p><p>인프런에서 <a href="https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard">김영한 님의 Spring MVC 강의</a>를 보던 도중 … ‘http request를 정확히 어떠한 방식으로 파싱하고 있을까?’라는 궁금증이 생겨서 강의를 듣다가 말고 삽질을 한 내용을 기록해둔다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><p>우선, 처음으로 궁금증을 해결하기 위해 들어가본 곳은 http request 요청을 받기 위한 <a href="https://javaee.github.io/javaee-spec/javadocs/javax/servlet/http/HttpServletRequest.html">HttpServletRequest interface</a>의 tomcat 구현체인 <a href="https://tomcat.apache.org/tomcat-8.0-doc/api/org/apache/catalina/connector/RequestFacade.html">RequestFacade</a> class부터 시작했다.</p><p>이 중 getHeader 메서드에 대해 찾아보면,</p><blockquote><p>Returns the value of the specified request header as a String.<br>If the request did not include a header of the specified name, this method returns null.<br>If there are multiple headers with the same name, this method returns the first head in the request.<br>The header name is case insensitive.<br>You can use this method with any request header.</p><footer><strong>RequestFacade</strong><cite><a href="https://tomcat.apache.org/tomcat-8.0-doc/api/org/apache/catalina/connector/RequestFacade.html#getHeader(java.lang.String)">RequestFacade</a></cite></footer></blockquote><p>라고 설명되어 있고… 이 때 코드에서 request의 header를 살펴보면</p><img src="/2021/11/15/spring%EC%97%90%EC%84%9C-request-header%EB%A5%BC-parsing-%ED%95%98%EB%8A%94-%EB%B2%95/1.JPG" class="" title="spring에서 request header를 parsing 하는 법 이미 header에 정보들이 저장되어 있는 상태 " alt="이미 header에 정보들이 저장되어 있는 상태"><p>이미지와 같이 이미 header에 대한 정보들이 각각 저정되어 있는 걸 볼 수 있다.</p><p>필자가 궁금했던 것은 ‘이 request에 header는 언제 저장되는가?’ 였으므로<br>막연하게 ‘여기서 더 타고 올라가면 찾아 낼 수 있겠구나..’ 라고 안일한(?) 생각을 하고 안으로 더 들어가보았다.</p><p>타고타고 가다보니 …<br>http 1.1 header에 의한 요청이므로 Http11Processor의 service 메서드에서</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Don&#x27;t parse headers for HTTP/0.9</span></span><br><span class="line"><span class="keyword">if</span> (!http09 &amp;&amp; !inputBuffer.parseHeaders()) &#123;</span><br><span class="line">    <span class="comment">// We&#x27;ve read part of the request, don&#x27;t recycle it</span></span><br><span class="line">    <span class="comment">// instead associate it with the socket</span></span><br><span class="line">    openSocket = <span class="keyword">true</span>;</span><br><span class="line">    readComplete = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>처럼 작성되어 있는 코드를 발견했고, 여기에 있는 <a href="https://tomcat.apache.org/tomcat-9.0-doc/api/org/apache/coyote/http11/Http11InputBuffer.html">inputBuffer</a>.parseHeaders() 을 보니<br>이름부터 여기서 http request에 대해 파싱을 할 것 같아 이 안으로 들어가보았다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (headerParsePos == HeaderParsePosition.HEADER_NAME) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Read new bytes if needed</span></span><br><span class="line">    <span class="keyword">if</span> (byteBuffer.position() &gt;= byteBuffer.limit()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!fill(<span class="keyword">false</span>)) &#123; <span class="comment">// parse header</span></span><br><span class="line">            <span class="keyword">return</span> HeaderParseStatus.NEED_MORE_DATA;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> pos = byteBuffer.position();</span><br><span class="line">    chr = byteBuffer.get();</span><br><span class="line">    <span class="keyword">if</span> (chr == Constants.COLON) &#123;</span><br><span class="line">        headerParsePos = HeaderParsePosition.HEADER_VALUE_START;</span><br><span class="line">        headerData.headerValue = headers.addValue(byteBuffer.array(), headerData.start,</span><br><span class="line">                pos - headerData.start);</span><br><span class="line">        pos = byteBuffer.position();</span><br><span class="line">        <span class="comment">// Mark the current buffer position</span></span><br><span class="line">        headerData.start = pos;</span><br><span class="line">        headerData.realPos = pos;</span><br><span class="line">        headerData.lastSignificantChar = pos;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!HttpParser.isToken(chr)) &#123;</span><br><span class="line">        <span class="comment">// Non-token characters are illegal in header names</span></span><br><span class="line">        <span class="comment">// Parsing continues so the error can be reported in context</span></span><br><span class="line">        headerData.lastSignificantChar = pos;</span><br><span class="line">        byteBuffer.position(byteBuffer.position() - <span class="number">1</span>);</span><br><span class="line">        <span class="comment">// skipLine() will handle the error</span></span><br><span class="line">        <span class="keyword">return</span> skipLine();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// chr is next byte of header name. Convert to lowercase.</span></span><br><span class="line">    <span class="keyword">if</span> ((chr &gt;= Constants.A) &amp;&amp; (chr &lt;= Constants.Z)) &#123;</span><br><span class="line">        byteBuffer.put(pos, (<span class="keyword">byte</span>) (chr - Constants.LC_OFFSET));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>들어가서보니 해당 코드처럼</p><p>현재 header data의 파싱된 위치가 key, value 형식의 데이터인 header의 name 부분 이라면 계속 반복하면서 버퍼에 저장하고 COLON(:) 을 만나게 되면,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">headerData.headerValue = headers.addValue(byteBuffer.array(), headerData.start,</span><br><span class="line">                        pos - headerData.start);</span><br></pre></td></tr></table></figure><p>코드가 실행되면서 아까 봤던 request의 MimeHeaders 타입인 header에 name으로 저장되고</p><p>value에도 위와 같은 방식으로 byte 단위로 이동하고 저장되면서 header에 value에 저장된다.</p><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>서블릿이 http 통신을 위해 귀찮은 것들을 해준다는 것은 알고 있었지만<br>실제로 어떻게 하고 지에 대해서는 신경을 안 쓰고 있었는데 이렇게 강의를 듣다 보니 궁금해서 한번 확인해보았다.</p><p>만일 이 작업을 서블릿에서 대신 안해주지 않고 개발자가 개발할 때마다 해줘야한다고 생각하면…<br>머리가 어지러워지는 것 같아 이만 글을 줄인다…</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://www.inflearn.com/course/%EC%8A%A4%ED%94%84%EB%A7%81-mvc-1/dashboard">스프링 MVC 1편 - 백엔드 웹 개발 핵심 기술</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;우선 사과의 말씀부터 올린다. 제목은 ‘spring에서~’ 지만 정확히는 tomcat에서 ~ 로 보는 것이 맞다.&lt;/p&gt;
&lt;p</summary>
      
    
    
    
    
    <category term="spring" scheme="https://jungguji.github.io/tags/spring/"/>
    
    <category term="tomcat" scheme="https://jungguji.github.io/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>애플 팀 변경 시 유저 정보 migration하기</title>
    <link href="https://jungguji.github.io/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/"/>
    <id>https://jungguji.github.io/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/</id>
    <published>2021-10-31T11:24:57.000Z</published>
    <updated>2021-10-31T11:24:57.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>현재 운영 중인 서비스가 어른들의 사정(?)으로 기존에 앱스토어에 올라와있던 어플의 팀을 이전해야 하는 경우가 생겼는데 이 때 팀 변경 후(정확히는 변경 후, Service Ids를 새로 생성한 후) 기존 애플 유저들의 계정이 로그인 되지 않고 가입 프로세스를 타게 되었는데, 이를 해결 하기 위해 이전 된 팀으로 기존 유저 정보를 마이그레이션 하는 방법을 정리 해둔다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="1-기존-팀-Key-file로-client-secret-생성"><a href="#1-기존-팀-Key-file로-client-secret-생성" class="headerlink" title="1. 기존 팀 Key file로 client_secret 생성"></a>1. 기존 팀 Key file로 client_secret 생성</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span> <span class="string">&#x27;jwt&#x27;</span></span><br><span class="line"></span><br><span class="line">key_file = <span class="string">&#x27;기존 키파일명&#x27;</span></span><br><span class="line">team_id = <span class="string">&#x27;기존 팀 아이디&#x27;</span></span><br><span class="line">client_id = <span class="string">&#x27;클라이언트 아이디&#x27;</span></span><br><span class="line">key_id = <span class="string">&#x27;기존 키 아이디&#x27;</span></span><br><span class="line"></span><br><span class="line">ecdsa_key = OpenSSL::PKey::EC.new IO.read key_file</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">  <span class="string">&#x27;kid&#x27;</span> =&gt; key_id</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">claims = &#123;</span><br><span class="line">    <span class="string">&#x27;iss&#x27;</span> =&gt; team_id,</span><br><span class="line">    <span class="string">&#x27;iat&#x27;</span> =&gt; Time.now.to_i,</span><br><span class="line">    <span class="string">&#x27;exp&#x27;</span> =&gt; Time.now.to_i + <span class="number">86400</span>*<span class="number">180</span>,</span><br><span class="line">    <span class="string">&#x27;aud&#x27;</span> =&gt; <span class="string">&#x27;https://appleid.apple.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;sub&#x27;</span> =&gt; client_id,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">token = JWT.encode claims, ecdsa_key, <span class="string">&#x27;ES256&#x27;</span>, headers</span><br><span class="line"></span><br><span class="line">puts token</span><br></pre></td></tr></table></figure><ol><li>위 코드를 복사해서 ruby script 파일(.rb)로 만든다.</li><li>키 파일과 작성한 script 파일을 같은 디렉토리 내에 위치 시킨다.</li><li>터미널에서 .rb 스크립트를 실행 시킨다.</li></ol><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ruby 스크립트와 키파일이 존재하는 디렉토리로 이동</span></span><br><span class="line">cd /Users/user/Documents/apple_client</span><br><span class="line"></span><br><span class="line"><span class="comment"># ruby 스크립트 실행</span></span><br><span class="line">ruby client_secret.rb</span><br></pre></td></tr></table></figure><ol start="4"><li>스크립트가 정상적으로 실행됐으면 client_secret이 생성됨</li></ol><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Ignoring ffi-1.15.0 because its extensions are not built. Try: gem pristine ffi --version 1.15.0</span><br><span class="line"># 아래</span><br><span class="line">eyJraWQiOiJHMzg2UlM3MlY3IiwiYWxnIjoiRVMyNTYifQ.eyJpc3MiXXXXXXXXXxxxTJSOVM1IiwiaWF0IjoxNjM1MzAwOTY0LCJleHAiOjE2NTA4NTI5NjQsImxxxxxxXXXBzOi8vYXBwbGVpZC5hcHBsZS5jb20iLCJzdWIiOiJjb20uampsZWUuV2VkUXVlZW4ifQ.Zw18dKVQxxxxxXXXXXXeSVMT8B_aTkVHULNPOal7W_n_KTba3WtYwE-fQh8Ru6GhmNdVbx2VD1TnPBjTZmKB6PaZ58w</span><br></pre></td></tr></table></figure><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/1.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><hr><h3 id="2-access-token-생성"><a href="#2-access-token-생성" class="headerlink" title="2. access_token 생성"></a>2. access_token 생성</h3><ul><li>기존 provider_id를 transfer 하기 위해선 apple api로 통신해야하는데 이 때 필요한 access_token을 생성한다.</li><li>POST 요청을 전송하기 위해 postman(<a href="https://www.postman.com/">https://www.postman.com/</a>)을 사용</li><li>참고 document (<a href="https://developer.apple.com/documentation/sign_in_with_apple/transferring_your_apps_and_users_to_another_team">https://developer.apple.com/documentation/sign_in_with_apple/transferring_your_apps_and_users_to_another_team</a>)</li></ul><ol><li>request 작성</li></ol><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/2.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">URL : https://appleid.apple.com/auth/token</span><br><span class="line">HTTP Method : POST</span><br><span class="line">Content-Type : x-www-form-urlencoded</span><br><span class="line">Body : </span><br><span class="line">&#123;</span><br><span class="line">    grant_type : client_credentials</span><br><span class="line">    scope : user.migration</span><br><span class="line">    client_id : 클라이언트 아이디</span><br><span class="line">    client_secret : 위에서 생성한 client_secret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>요청 후 결과 확인</li></ol><ul><li>정상적으로 응답이 온다면 아래처럼 1시간 짜리 access_token이 발급된다.</li><li>1 시간이 경과하면 재발급을 받아야 한다.</li></ul><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/3.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><hr><h3 id="3-기존-유저-provider-Id-transfer"><a href="#3-기존-유저-provider-Id-transfer" class="headerlink" title="3. 기존 유저 provider Id transfer"></a>3. 기존 유저 provider Id transfer</h3><ul><li>변경된 팀의 provider Id로 변경하기 전 단계</li><li>여기서 응답받은 transfer_sub 으로 다시 변경 요청을 보내야 변경된 팀 provider id를 받을 수 있음</li></ul><ol><li>request 작성</li></ol><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/4.png" class="" title="애플 팀 변경 시 유저 정보 migration하기 access_token 설정 token_type이 bearer였으므로, bearer token으로 설정 " alt="access_token 설정 token_type이 bearer였으므로, bearer token으로 설정"><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/5.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">URL : https://appleid.apple.com/auth/usermigrationinfo</span><br><span class="line">HTTP Method : POST</span><br><span class="line">Content-Type : x-www-form-urlencoded</span><br><span class="line">Authorization: Bearer &#123;access_token&#125;</span><br><span class="line">Body : </span><br><span class="line">&#123;</span><br><span class="line">    sub : 기존 유저 Provider Id</span><br><span class="line">    target : 새로 만든 팀 ID</span><br><span class="line">    client_id : 클라이언트 아이디</span><br><span class="line">    client_secret : 위에서 생성한 client_secret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>요청 후 결과 확인</li></ol><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/6.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><hr><h3 id="4-변경된-팀-Provider-Id로-transfer"><a href="#4-변경된-팀-Provider-Id로-transfer" class="headerlink" title="4. 변경된 팀 Provider Id로 transfer"></a>4. 변경된 팀 Provider Id로 transfer</h3><ul><li>참고 document<ul><li><a href="https://developer.apple.com/documentation/sign_in_with_apple/bringing_new_apps_and_users_into_your_team">https://developer.apple.com/documentation/sign_in_with_apple/bringing_new_apps_and_users_into_your_team</a></li><li><a href="https://developer.apple.com/forums/thread/666734">https://developer.apple.com/forums/thread/666734</a></li></ul></li><li>필자는 이 단계가 존재한다는 걸 몰라서 문제 해결에 많은 시간이 소요 되었다…</li></ul><ol><li>requset 생성<ul><li>이 때 전송되는 client_secret은 새로 만든 팀의 키 파일로 생성된 client_secret이다.</li><li>이 때 전송되는 client_secret은 새로 만든 팀의 키 파일로 생성된 client_secret이다.</li><li>이 때 전송되는 client_secret은 새로 만든 팀의 키 파일로 생성된 client_secret이다.</li><li>client_secret을 만드는 방법은 1번과 같다.</li><li>bearer token은 기존에 만든 것을 사용하면 된다.</li></ul></li></ol><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/7.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">URL : https://appleid.apple.com/auth/usermigrationinfo</span><br><span class="line">HTTP Method : POST</span><br><span class="line">Content-Type : x-www-form-urlencoded</span><br><span class="line">Authorization: Bearer &#123;access_token&#125;</span><br><span class="line">Body : </span><br><span class="line">&#123;</span><br><span class="line">    transfer_sub : 이전 단계에서 transfer된 sub</span><br><span class="line">    client_id : 클라이언트 아이디</span><br><span class="line">    client_secret : 새로 만든 팀의 client_secret</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>요청 후 결과 확인</li></ol><img src="/2021/10/31/%EC%95%A0%ED%94%8C-%ED%8C%80-%EB%B3%80%EA%B2%BD-%EC%8B%9C-%EC%9C%A0%EC%A0%80-%EC%A0%95%EB%B3%B4-migration%ED%95%98%EA%B8%B0/8.png" class="" title="애플 팀 변경 시 유저 정보 migration하기"><ul><li>000000.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx.0000</li><li>형식으로 생성되는데 이 때 맨 앞에 00000. 부분은 변경되지 않으므로</li><li>이 부분을 확인</li></ul><hr><h3 id="5-DB에-저장된-유저-provider-Id-변경"><a href="#5-DB에-저장된-유저-provider-Id-변경" class="headerlink" title="5. DB에 저장된 유저 provider Id 변경"></a>5. DB에 저장된 유저 provider Id 변경</h3><ul><li>필자의 서비스는 provider ID로 유니크한 KEY를 만들어 사용하고 있었으므로 이 부분을 업데이트 해주었다.</li></ul><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://developer.apple.com/documentation/sign_in_with_apple/transferring_your_apps_and_users_to_another_team">https://developer.apple.com/documentation/sign_in_with_apple/transferring_your_apps_and_users_to_another_team</a></li><li><a href="https://developer.apple.com/documentation/sign_in_with_apple/bringing_new_apps_and_users_into_your_team">https://developer.apple.com/documentation/sign_in_with_apple/bringing_new_apps_and_users_into_your_team</a></li><li><a href="https://developer.apple.com/forums/thread/666734">https://developer.apple.com/forums/thread/666734</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;현재 운영 중인 서비스가 어른들의 사정(?)으로 기존에 앱스토어에 올라와있던 어플의 팀을 이전해야 하는 경우가 생겼는데 이 때</summary>
      
    
    
    
    
    <category term="apple" scheme="https://jungguji.github.io/tags/apple/"/>
    
  </entry>
  
  <entry>
    <title>Unable to locate Attribute  with the the given name [XXX] on this ManagedType</title>
    <link href="https://jungguji.github.io/2021/09/12/Unable-to-locate-Attribute-with-the-the-given-name-XXX-on-this-ManagedType/"/>
    <id>https://jungguji.github.io/2021/09/12/Unable-to-locate-Attribute-with-the-the-given-name-XXX-on-this-ManagedType/</id>
    <published>2021-09-12T07:02:14.000Z</published>
    <updated>2021-09-12T07:02:14.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>spring으로 된 프로젝트를 spring boot으로 전환 중… query method로 작성되어 있는 부분에서 발생한 문제에 대해 알아보고 이에 대한 해결 방법을 정리 해둔다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="에러가-발생한-code"><a href="#에러가-발생한-code" class="headerlink" title="에러가 발생한 code"></a>에러가 발생한 code</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">XXXX</span> </span>&#123;</span><br><span class="line">    ... </span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DDay dDay;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Repository</span> </span>&#123;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="function">List&lt;Category&gt; <span class="title">findByDDayOrderByDDayStartDateAsc</span><span class="params">(DDay dday)</span></span>;</span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h3 id="발생한-에러-전문"><a href="#발생한-에러-전문" class="headerlink" title="발생한 에러 전문"></a>발생한 에러 전문</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Caused by: java.lang.IllegalArgumentException: Unable to locate Attribute  with the the given name [attribute명] on this ManagedType [class명]</span><br><span class="line">    at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.checkNotNull(AbstractManagedType.java:<span class="number">148</span>) ~[hibernate-core-<span class="number">5.4</span>.<span class="number">32.F</span>inal.jar:<span class="number">5.4</span>.<span class="number">32.F</span>inal]</span><br><span class="line">    at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(AbstractManagedType.java:<span class="number">119</span>) ~[hibernate-core-<span class="number">5.4</span>.<span class="number">32.F</span>inal.jar:<span class="number">5.4</span>.<span class="number">32.F</span>inal]</span><br><span class="line">    at org.hibernate.metamodel.model.domain.internal.AbstractManagedType.getAttribute(AbstractManagedType.java:<span class="number">44</span>) ~[hibernate-core-<span class="number">5.4</span>.<span class="number">32.F</span>inal.jar:<span class="number">5.4</span>.<span class="number">32.F</span>inal]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.QueryUtils.requiresOuterJoin(QueryUtils.java:<span class="number">697</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:<span class="number">638</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:<span class="number">617</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.QueryUtils.toExpressionRecursively(QueryUtils.java:<span class="number">613</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.getTypedPath(JpaQueryCreator.java:<span class="number">385</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryCreator$PredicateBuilder.build(JpaQueryCreator.java:<span class="number">308</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryCreator.toPredicate(JpaQueryCreator.java:<span class="number">211</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:<span class="number">124</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.JpaQueryCreator.create(JpaQueryCreator.java:<span class="number">59</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.repository.query.parser.AbstractQueryCreator.createCriteria(AbstractQueryCreator.java:<span class="number">119</span>) ~[spring-data-commons-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:<span class="number">95</span>) ~[spring-data-commons-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.repository.query.parser.AbstractQueryCreator.createQuery(AbstractQueryCreator.java:<span class="number">81</span>) ~[spring-data-commons-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$QueryPreparer.&lt;init&gt;(PartTreeJpaQuery.java:<span class="number">217</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.PartTreeJpaQuery$CountQueryPreparer.&lt;init&gt;(PartTreeJpaQuery.java:<span class="number">348</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    at org.springframework.data.jpa.repository.query.PartTreeJpaQuery.&lt;init&gt;(PartTreeJpaQuery.java:<span class="number">91</span>) ~[spring-data-jpa-<span class="number">2.5</span>.<span class="number">2.</span>jar:<span class="number">2.5</span>.<span class="number">2</span>]</span><br><span class="line">    ... <span class="number">117</span> common frames omitted</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Process finished with exit code <span class="number">0</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="왜-발생-했을까"><a href="#왜-발생-했을까" class="headerlink" title="왜 발생 했을까?"></a>왜 발생 했을까?</h3><blockquote><p>The inconsistency between the subject part and the OrderBy part is certainly a bug.</p><p>For the given case the correct behaviour  seem to be the one from the OrderBy part which is adhering to the conventions laid out in the Java Bean Specification 1.0.1 Section 8.8:</p><p>…</p><p>There is no way to write the property name in the middle of a java method name if the property begins with a single lower case letter followed by an upper case letter.</p><p>Therefore renaming the property, or less invasive providing a @Query annotation are the ways to solve this problem on your side GitFlip</p><footer><strong>spring-data-commons</strong><cite><a href="https://github.com/spring-projects/spring-data-commons/issues/1996">spring-projects</a></cite></footer></blockquote><br /><p>독자들의 빠른 문제 해결을 위해 결론부터 이야기 하자면 위의 글에서 보는 것 처럼 query method에서 OrderBy를 사용 할 때 “dDay” 같이 맨 앞 한 자리가 소문자 변수명을 사용 하는 경우  spring-data-jpa의 버그로 발생하는 에러인데 해결방법으로는 @Query annotation을 사용하거나 변수명을 변경하는 것을 권하고 있다.</p><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><h3 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Query(&quot;SELECT c FROM Entity명 c WHERE c.dDay =:dday ORDER BY dDayStartDate&quot;)</span></span><br><span class="line"><span class="function">List&lt;Category&gt; <span class="title">findByDDayOrderByDDayStartDateAsc</span><span class="params">(DDay dday)</span></span>;</span><br></pre></td></tr></table></figure><p>위에서 알려준 해결책 중 필자는 @Query Annotation을 사용하는 방법으로 문제를 수정하였는데 다른 이유가 있는 것은 아니고 현재 프로젝트에서 변수명을 변경하는 것이 더 코스트가 많이 발생하기 때문에 @Query를 사용해서 처리했다.</p><p>이 문제 때문에 꽤 많은 시간을 소비 하였는데 필자와 같은 무고한 피해자(?)가 발생하지 않기를 바라며 글을 마친다.</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods.query-property-expressions">https://docs.spring.io/spring-data/jpa/docs/current/reference/html/#repositories.query-methods.query-property-expressions</a></li><li><a href="https://hongsii.github.io/2019/01/06/jpa-query-creation-with-underscore/">https://hongsii.github.io/2019/01/06/jpa-query-creation-with-underscore/</a></li><li><a href="https://github.com/spring-projects/spring-data-commons/issues/1996">https://github.com/spring-projects/spring-data-commons/issues/1996</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;spring으로 된 프로젝트를 spring boot으로 전환 중… query method로 작성되어 있는 부분에서 발생한 문제</summary>
      
    
    
    
    
    <category term="Spring-Boot" scheme="https://jungguji.github.io/tags/Spring-Boot/"/>
    
  </entry>
  
  <entry>
    <title>Attribute [ifAnyGranted] invalid for tag [authorize] according to TLD</title>
    <link href="https://jungguji.github.io/2021/08/01/Attribute-ifAnyGranted-invalid-for-tag-authorize-according-to-TLD/"/>
    <id>https://jungguji.github.io/2021/08/01/Attribute-ifAnyGranted-invalid-for-tag-authorize-according-to-TLD/</id>
    <published>2021-08-01T09:18:55.000Z</published>
    <updated>2021-08-01T09:18:55.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><p>spring으로 된 프로젝트를 spring boot으로 전환 중에 spring-security-taglibs의 버전을 3.x 에서 5.5.1로 업데이트 했는데 아래와 같은 에러가 발생하여 이에 관한 내용을 정리 해둔다.</p><hr><h2 id="발생한-에러"><a href="#발생한-에러" class="headerlink" title="발생한 에러"></a>발생한 에러</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">org.apache.jasper.JasperException: /WEB-INF/views/layout/layout.jsp (line: [<span class="number">126</span>], column: [<span class="number">0</span>]) Attribute [ifAnyGranted] invalid <span class="keyword">for</span> tag [authorize] according to TLD</span><br><span class="line">        at org.apache.jasper.compiler.DefaultErrorHandler.jspError(DefaultErrorHandler.java:<span class="number">41</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.ErrorDispatcher.dispatch(ErrorDispatcher.java:<span class="number">292</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.ErrorDispatcher.jspError(ErrorDispatcher.java:<span class="number">115</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Validator$ValidateVisitor.checkXmlAttributes(Validator.java:<span class="number">1287</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Validator$ValidateVisitor.visit(Validator.java:<span class="number">900</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$CustomTag.accept(Node.java:<span class="number">1558</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:<span class="number">2385</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$Visitor.visitBody(Node.java:<span class="number">2437</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$Visitor.visit(Node.java:<span class="number">2443</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$Root.accept(Node.java:<span class="number">471</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line">        at org.apache.jasper.compiler.Node$Nodes.visit(Node.java:<span class="number">2385</span>) ~[tomcat-embed-jasper-<span class="number">9.0</span>.<span class="number">48.</span>jar!/:na]</span><br><span class="line"></span><br><span class="line">        ...</span><br></pre></td></tr></table></figure><h2 id="왜-발생했을까"><a href="#왜-발생했을까" class="headerlink" title="왜 발생했을까?"></a>왜 발생했을까?</h2><blockquote><p>This section describes all of the deprecated APIs within the spring-security-taglibs module. If you are not using the spring-security-taglibs module or have already completed this task, you can safely skip to spring-security-web.</p><p>Spring Security’s authorize JSP tag deprecated the properties ifAllGranted, ifAnyGranted, and ifNotGranted in favor of using expressions.</p><footer><strong>spring-security,</strong><cite><a href="https://docs.spring.io/spring-security/site/migrate/current/3-to-4/html5/migrate-3-to-4-jc.html#m3to4-deprecations-taglibs">Migrating from Spring Security 3.x to 4.x</a></cite></footer></blockquote><p>문서에 적혀 있는 것 처럼 spring-security-taglibs 4.x 버전 이상 부터는 ifAllGranted, ifAnyGranted, ifNotGranted 속성들을 지원하지 않기 때문에 3.x 버전에서 5 버전으로 업그레이드하면서 해당 속성들을 사용한 코드들이 있는 경우 발생하는 문제였다.</p><h2 id="해결방법"><a href="#해결방법" class="headerlink" title="해결방법"></a>해결방법</h2><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;sec:authorize ifAllGranted=<span class="string">&quot;ROLE_ADMIN,ROLE_USER&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must have ROLE_ADMIN and ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line">&lt;sec:authorize ifAnyGranted=<span class="string">&quot;ROLE_ADMIN,ROLE_USER&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must have ROLE_ADMIN or ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line">&lt;sec:authorize ifNotGranted=<span class="string">&quot;ROLE_ADMIN,ROLE_USER&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must not have ROLE_ADMIN or ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>위 처럼 되어 있을 경우</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;sec:authorize access=<span class="string">&quot;hasRole(&#x27;ROLE_ADMIN&#x27;) and hasRole(&#x27;ROLE_USER&#x27;)&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must have ROLE_ADMIN and ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line">&lt;sec:authorize access=<span class="string">&quot;hasAnyRole(&#x27;ROLE_ADMIN&#x27;,&#x27;ROLE_USER&#x27;)&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must have ROLE_ADMIN or ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line">&lt;sec:authorize access=<span class="string">&quot;!hasAnyRole(&#x27;ROLE_ADMIN&#x27;,&#x27;ROLE_USER&#x27;)&quot;</span>&gt;</span><br><span class="line">    &lt;p&gt;Must not have ROLE_ADMIN or ROLE_USER&lt;/p&gt;</span><br><span class="line">&lt;/sec:authorize&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>아래 처럼 치환해주면 정상적으로 작동하는 것을 확인 할 수 있을 것이다.</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://okky.kr/article/679832">https://okky.kr/article/679832</a></li><li><a href="https://docs.spring.io/spring-security/site/migrate/current/3-to-4/html5/migrate-3-to-4-jc.html#m3to4-deprecations-taglibs">https://docs.spring.io/spring-security/site/migrate/current/3-to-4/html5/migrate-3-to-4-jc.html#m3to4-deprecations-taglibs</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;p&gt;spring으로 된 프로젝트를 spring boot으로 전환 중에 spring-security-taglibs의 버전을 3.x </summary>
      
    
    
    
    
    <category term="spring" scheme="https://jungguji.github.io/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>Command line is too long. Shorten command line for.. 해결</title>
    <link href="https://jungguji.github.io/2021/05/30/Command-line-is-too-long-Shorten-command-line-for-%ED%95%B4%EA%B2%B0/"/>
    <id>https://jungguji.github.io/2021/05/30/Command-line-is-too-long-Shorten-command-line-for-%ED%95%B4%EA%B2%B0/</id>
    <published>2021-05-30T02:48:52.000Z</published>
    <updated>2021-05-30T02:48:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><p>평소와 같이 테스트 코드를 작성하고 실행을 했는데… 아래와 같이 에러가 발생하며 테스트가 진행되지 않았다.</p><h3 id="발생한-에러"><a href="#발생한-에러" class="headerlink" title="발생한 에러"></a>발생한 에러</h3><img src="/2021/05/30/Command-line-is-too-long-Shorten-command-line-for-%ED%95%B4%EA%B2%B0/%EC%97%90%EB%9F%AC.JPG" class="" title="Command line is too long. Shorten command line for.. 해결"><hr><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><img src="/2021/05/30/Command-line-is-too-long-Shorten-command-line-for-%ED%95%B4%EA%B2%B0/workspace.JPG" class="" title="Command line is too long. Shorten command line for.. 해결"><p>위 이미지처럼 프로젝트 루트에 존재하는 .idea 폴더에 workspace.xml 파일을 열어서</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">component</span> <span class="attr">name</span>=<span class="string">&quot;PropertiesComponent&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dynamic.classpath&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">component</span>&gt;</span></span><br></pre></td></tr></table></figure><p>를 추가해주면 된다.</p><p>보통 이미 PropertiesComponent 태그는 존재 할 테니 그 아래 있는</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;dynamic.classpath&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>옵션만 정상적으로 넣어주면 된다.</p><hr><h2 id="보너스"><a href="#보너스" class="headerlink" title="보너스"></a>보너스</h2><h3 id="dynamic-classpath-옵션이-뭔데-넣으면-되는-거에요"><a href="#dynamic-classpath-옵션이-뭔데-넣으면-되는-거에요" class="headerlink" title="dynamic.classpath 옵션이 뭔데 넣으면 되는 거에요?"></a>dynamic.classpath 옵션이 뭔데 넣으면 되는 거에요?</h3><p>이 질문에 대한 답은 역시 없는게 없는 스택오버 플로우에 이미 존재한다. <a href="https://stackoverflow.com/questions/4853540/what-does-the-dynamic-classpath-flag-do-intellij-project-settings">What does the dynamic.classpath flag do? (IntelliJ project settings)</a></p><p>간단하게 정리하면 커맨드라인이나 파일을 통해 클래스 패스가 jvm에 전달되는 방식을 제어하는데 대부분의 os에선 최대 명령 줄 제한이 있어서 이 제한을 넘는 명령은 IDEA에서 실행 할 수 없기 때문에 명령이 32768 자 보다 길면 동적 클래스 패스로 전환 할 것을 제안하고 이 때 긴~ 클래스 패스는 파일에 기록된 다음, 응용 프로그램 관리자가 읽어서 시스템 클래스 로더를 통해 로드 된다는 것이다.</p><p>끝!</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://stackoverflow.com/questions/4853540/what-does-the-dynamic-classpath-flag-do-intellij-project-settings">https://stackoverflow.com/questions/4853540/what-does-the-dynamic-classpath-flag-do-intellij-project-settings</a></li><li><a href="http://jmlim.github.io/intellij/2020/02/27/intellij-idea-command-line-is-too-long-error/">http://jmlim.github.io/intellij/2020/02/27/intellij-idea-command-line-is-too-long-error/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;상황&quot;&gt;&lt;a href=&quot;#상황&quot; class=&quot;headerlink&quot; title=&quot;상황&quot;&gt;&lt;/a&gt;상황&lt;/h2&gt;&lt;p&gt;평소와 같이 테스트 코드를 작성하고 실행을 했는데… 아래와 같이 에러가 발생하며 테스트가 진행되지 않았다.&lt;/p&gt;
&lt;h3 id</summary>
      
    
    
    
    
    <category term="intellij" scheme="https://jungguji.github.io/tags/intellij/"/>
    
    <category term="junit" scheme="https://jungguji.github.io/tags/junit/"/>
    
  </entry>
  
  <entry>
    <title>Android Button tag AppCompat Error</title>
    <link href="https://jungguji.github.io/2021/05/03/Android-Button-tag-AppCompat-Error/"/>
    <id>https://jungguji.github.io/2021/05/03/Android-Button-tag-AppCompat-Error/</id>
    <published>2021-05-03T12:54:53.000Z</published>
    <updated>2021-05-03T12:54:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>어쩌다보니 학부생 시절 가장 싫어해 마지않던 안드로이드를 다시 공부하게 되었는데, 간단한 화면 하나 만들고도 실행이 안되서 삽질한 내용을 정리한다.</p><hr><h2 id="발생한-에러"><a href="#발생한-에러" class="headerlink" title="발생한 에러"></a>발생한 에러</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2021</span>-<span class="number">05</span>-<span class="number">03</span> <span class="number">22</span>:<span class="number">06</span>:<span class="number">26.170</span> <span class="number">18752</span>-<span class="number">18752</span>/com.jgji.memo E/AndroidRuntime: FATAL EXCEPTION: main</span><br><span class="line">    Process: com.jgji.memo, PID: <span class="number">18752</span></span><br><span class="line">    java.lang.RuntimeException: Unable to start activity ComponentInfo&#123;com.jgji.memo/com.jgji.memo.MainActivity&#125;: android.view.InflateException: Binary XML file line #33 in com.jgji.memo:layout/activity_main: Binary XML file line #33 in com.jgji.memo:layout/activity_main: Error inflating class Button</span><br><span class="line">        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">3449</span>)</span><br><span class="line">        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">3601</span>)</span><br><span class="line">        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:<span class="number">85</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:<span class="number">135</span>)</span><br><span class="line">        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:<span class="number">95</span>)</span><br><span class="line">        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:<span class="number">2066</span>)</span><br><span class="line">        at android.os.Handler.dispatchMessage(Handler.java:<span class="number">106</span>)</span><br><span class="line">        at android.os.Looper.loop(Looper.java:<span class="number">223</span>)</span><br><span class="line">        at android.app.ActivityThread.main(ActivityThread.java:<span class="number">7656</span>)</span><br><span class="line">        at java.lang.reflect.Method.invoke(Native Method)</span><br><span class="line">        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:<span class="number">592</span>)</span><br><span class="line">        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:<span class="number">947</span>)</span><br><span class="line">     Caused by: android.view.InflateException: Binary XML file line #33 in com.jgji.memo:layout/activity_main: Binary XML file line #33 in com.jgji.memo:layout/activity_main: Error inflating class Button</span><br><span class="line">     Caused by: android.view.InflateException: Binary XML file line #33 in com.jgji.memo:layout/activity_main: Error inflating class Button</span><br><span class="line">     Caused by: java.lang.IllegalArgumentException: The style on <span class="keyword">this</span> component <span class="keyword">requires</span> your app theme to be Theme.AppCompat (or a descendant).</span><br><span class="line">        at com.google.android.material.internal.ThemeEnforcement.checkTheme(ThemeEnforcement.java:<span class="number">243</span>)</span><br><span class="line">        at com.google.android.material.internal.ThemeEnforcement.checkAppCompatTheme(ThemeEnforcement.java:<span class="number">213</span>)</span><br><span class="line">        at com.google.android.material.internal.ThemeEnforcement.checkCompatibleTheme(ThemeEnforcement.java:<span class="number">148</span>)</span><br><span class="line">        at com.google.android.material.internal.ThemeEnforcement.obtainStyledAttributes(ThemeEnforcement.java:<span class="number">76</span>)</span><br><span class="line">        at com.google.android.material.button.MaterialButton.&lt;init&gt;(MaterialButton.java:<span class="number">229</span>)</span><br><span class="line">        at com.google.android.material.button.MaterialButton.&lt;init&gt;(MaterialButton.java:<span class="number">220</span>)</span><br><span class="line">        at com.google.android.material.theme.MaterialComponentsViewInflater.createButton(MaterialComponentsViewInflater.java:<span class="number">43</span>)</span><br><span class="line">        at androidx.appcompat.app.AppCompatViewInflater.createView(AppCompatViewInflater.java:<span class="number">123</span>)</span><br><span class="line">        at androidx.appcompat.app.AppCompatDelegateImpl.createView(AppCompatDelegateImpl.java:<span class="number">1551</span>)</span><br><span class="line">        at androidx.appcompat.app.AppCompatDelegateImpl.onCreateView(AppCompatDelegateImpl.java:<span class="number">1602</span>)</span><br><span class="line">        at android.view.LayoutInflater.tryCreateView(LayoutInflater.java:<span class="number">1059</span>)</span><br><span class="line">        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:<span class="number">995</span>)</span><br><span class="line">        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:<span class="number">959</span>)</span><br><span class="line">        at android.view.LayoutInflater.rInflate(LayoutInflater.java:<span class="number">1121</span>)</span><br><span class="line">        at android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:<span class="number">1082</span>)</span><br><span class="line">        at android.view.LayoutInflater.inflate(LayoutInflater.java:<span class="number">680</span>)</span><br><span class="line">        at android.view.LayoutInflater.inflate(LayoutInflater.java:<span class="number">532</span>)</span><br><span class="line">        at android.view.LayoutInflater.inflate(LayoutInflater.java:<span class="number">479</span>)</span><br><span class="line">        at androidx.appcompat.app.AppCompatDelegateImpl.setContentView(AppCompatDelegateImpl.java:<span class="number">696</span>)</span><br><span class="line">        at androidx.appcompat.app.AppCompatActivity.setContentView(AppCompatActivity.java:<span class="number">170</span>)</span><br><span class="line">        at com.jgji.memo.MainActivity.onCreate(MainActivity.java:<span class="number">27</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">8000</span>)</span><br><span class="line">        at android.app.Activity.performCreate(Activity.java:<span class="number">7984</span>)</span><br><span class="line">        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:<span class="number">1309</span>)</span><br><span class="line">        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:<span class="number">3422</span>)</span><br><span class="line">        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:<span class="number">3601</span>)</span><br><span class="line">        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:<span class="number">85</span>)</span><br></pre></td></tr></table></figure><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>결론부터 바로 말하면</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(value = &quot;StaticFieldLeak&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MemoDatabase db;</span><br><span class="line">    <span class="keyword">private</span> List&lt;MemoEntity&gt; memoList;</span><br><span class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</span><br><span class="line">    <span class="keyword">private</span> MemoDAO memoDAO;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>되어 있던 코드를 <a href="https://developer.android.com/reference/androidx/appcompat/app/AppCompatActivity">AppCompatActivity</a> 말고 <a href="https://developer.android.com/reference/android/app/Activity.html?hl=ko">Activity</a>를 상속 받도록 변경해서 해결 했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(value = &quot;StaticFieldLeak&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MemoDatabase db;</span><br><span class="line">    <span class="keyword">private</span> List&lt;MemoEntity&gt; memoList;</span><br><span class="line">    <span class="keyword">private</span> RecyclerView recyclerView;</span><br><span class="line">    <span class="keyword">private</span> MemoDAO memoDAO;</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><hr><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><p>둘의 정확한 차이는 모르겠지만, AppCompatActivity가 이전 안드로이드버전까지 커버해주는 클래스이고, Activity는 최신버전만 지원한다고 하는데… 이 문제랑 무슨 상관이 있는지 필자의 좁은 식견으로는 알 수가 없었기에 문제 해결에 도움을 받은 스택오버플로우의 글을 링크하며 글을 마무리 한다.  <a href="https://stackoverflow.com/questions/21814825/you-need-to-use-a-theme-appcompat-theme-or-descendant-with-this-activity">You need to use a Theme.AppCompat theme (or descendant) with this activity</a></p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://developer.android.com/reference/androidx/appcompat/app/AppCompatActivity">https://developer.android.com/reference/androidx/appcompat/app/AppCompatActivity</a></li><li><a href="https://developer.android.com/reference/android/app/Activity.html?hl=ko">https://developer.android.com/reference/android/app/Activity.html?hl=ko</a></li><li><a href="https://stackoverflow.com/questions/21814825/you-need-to-use-a-theme-appcompat-theme-or-descendant-with-this-activity">https://stackoverflow.com/questions/21814825/you-need-to-use-a-theme-appcompat-theme-or-descendant-with-this-activity</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;어쩌다보니 학부생 시절 가장 싫어해 마지않던 안드로이드를 다시 공부하게 되었는데, 간단한 화면 하나 만들고도 실행이 안되서 삽</summary>
      
    
    
    
    
    <category term="Android" scheme="https://jungguji.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>mysqldump를 활용한 MySQL backup</title>
    <link href="https://jungguji.github.io/2021/04/30/mysqldump%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-MySQL-backup/"/>
    <id>https://jungguji.github.io/2021/04/30/mysqldump%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-MySQL-backup/</id>
    <published>2021-04-30T14:02:05.000Z</published>
    <updated>2021-04-30T14:02:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>평소와 다름없이 유튜브를 배회하던 중 <a href="https://www.youtube.com/watch?v=SWZcrdmmLEU">재난급 서버 장애내고 개발자 인생 끝날뻔 한 썰</a>이란 영상을 보게 되었는데… ‘나는 지금 어떻게 하고 있지..?’ 라는 생각이 문득 들어서 얼른 나도 백업을 수시로 해둬야겠다는 생각에 적용한 mysql backup 방법을 남겨둔다.</p><hr><h2 id="왜-mysqldump로-했어요"><a href="#왜-mysqldump로-했어요" class="headerlink" title="왜 mysqldump로 했어요??"></a>왜 mysqldump로 했어요??</h2><p><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html">mysqldump</a>는 스토리지 엔진에 관계없이 논리 백업을 수행 할 수 있는 도구다.<br>무엇을 이용해서 backup을 해야할까 고민 하던 중 <a href="https://woowabros.github.io/experience/2018/05/28/billingjul.html">장애와 관련된 XtraBackup 적용기</a>를 보게 되었는데<br>데이터 사이즈가 크지 않다면 mysqldump를 사용하는 것이 간단하며 복원 시에도 신경 써야 할 것이 적다는 내용을 보고 mysqldump로 backup을 진행하기로 결정했다.</p><h2 id="그럼-어떻게-해요"><a href="#그럼-어떻게-해요" class="headerlink" title="그럼 어떻게 해요??"></a>그럼 어떻게 해요??</h2><p>mysqldump엔 여러가지 옵션들이 있지만 그 중 필자는 아래 처럼 사용 했다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump --single-transaction --databases [db명] --tables [테이블명] -h [db주소] -u [username] -p | gzip &gt; [파일명].gz</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="mysqldump-option"><a href="#mysqldump-option" class="headerlink" title="mysqldump option"></a>mysqldump option</h3><ul><li>–single-transaction : lock 을 걸지 않고도 dump 파일의 정합성 보장하는데 InnoDB 테이블이 아닌 MyISAM or MEMORY 테이블인 경우에는 여전히 상태가 변경 될 수 있다.<br>MySQL에선 큰 테이블을 덤프하려면 –quick 옵션과 결합하기를 권장한다.</li><li>–databases : dump 할 db명을 지정한다. 여러 개를 한번에 지정하는 것도 가능하다.</li><li>–tables : dump 할 table명을 지정한다. 마찬가지로 여러 개를 한번에 지정 할 수 있다.</li></ul><p>그리고 필자는 테이블 별로 데이터를 <a href="https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_gzip">gzip 형식</a>으로 압축하기 위해 gzip 명령어를 사용했다.</p><h3 id="그-결과"><a href="#그-결과" class="headerlink" title="그 결과"></a>그 결과</h3><img src="/2021/04/30/mysqldump%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-MySQL-backup/%EA%B7%B8_%EA%B2%B0%EA%B3%BC.png" class="" title="mysqldump를 활용한 MySQL backup mysqldump 실행 결과 mysqldump 실행 결과"><p>명령어를 실행하면 이 처럼 해당 경로에 .gz로 압축된 파일이 생성되고 이 파일의 압축을 해제하면 sql 파일이 된다.</p><h3 id="예외-상황"><a href="#예외-상황" class="headerlink" title="예외 상황"></a>예외 상황</h3><p>mysqldump는 mysql  client 유틸리티 이므로 당연히 mysql client가 있어야 실행 가능한데 아래 메시지는 그 mysql client가 설치되지 않았으니 설치 한 후 사용하라는 메시지이다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">The program &#x27;mysqldump&#x27; can be found in the following packages:</span><br><span class="line"> * mysql-client-5.5</span><br><span class="line"> * mariadb-client-5.5</span><br><span class="line"> * mysql-client-5.6</span><br><span class="line"> * percona-xtradb-cluster-client-5.5</span><br><span class="line">Try: sudo apt-get install &lt;selected package&gt;</span><br></pre></td></tr></table></figure><p>이 처럼 메시지가 출력 될 경우 위 리스트 중 하나를 설치하면 정상적으로 mysqldump가 이용 가능해 질 것이다.</p><hr><h2 id="shell-script로-작성하기"><a href="#shell-script로-작성하기" class="headerlink" title="shell script로 작성하기"></a>shell script로 작성하기</h2><p>이제 이 명령어를 스케줄러에 등록하기 위해 우선 쉘 스크립트 파일로 작성해야 하는데 필자 같은 경우는 아래와 같이 작성해서 사용하고 있다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">HOST=host명</span><br><span class="line">USER=user명</span><br><span class="line">PASSWORD=password</span><br><span class="line">DATABASE=db명</span><br><span class="line">TABLES=(</span><br><span class="line">table1</span><br><span class="line">table2</span><br><span class="line">table3</span><br><span class="line">...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">TABLES_STRING=&#x27;&#x27;</span><br><span class="line">for TABLE in &quot;$&#123;TABLES[@]&#125;&quot;</span><br><span class="line">do :</span><br><span class="line">   sudo mysqldump --single-transaction --databases $&#123;DATABASE&#125; --tables $&#123;TABLE&#125; --host $&#123;HOST&#125; --user $&#123;USER&#125; --password $&#123;PASSWORD&#125; | gzip &gt; /home/backup/$&#123;TABLE&#125;.sql.gz</span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>이렇게 작성한 sh 파일을 bash 명령어로 실행하면 테이블 갯수만큼 비밀번호를 입력하면 백업 작업을 정상적으로 완료하게 된다… (정말?)</p><hr><h2 id="crontab을-자동-backup"><a href="#crontab을-자동-backup" class="headerlink" title="crontab을 자동 backup"></a>crontab을 자동 backup</h2><p>이제 백업을 자동으로 실행하게 하기 위해서 리눅스에 존재하는 <a href="%5Bhttps://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EB%B0%98%EB%B3%B5_%EC%98%88%EC%95%BD%EC%9E%91%EC%97%85_cron,_crond,_crontab%5D(https://zetawiki.com/wiki/%EB%A6%AC%EB%88%85%EC%8A%A4_%EB%B0%98%EB%B3%B5_%EC%98%88%EC%95%BD%EC%9E%91%EC%97%85_cron,_crond,_crontab)">crontab</a>을 이용하기로 한다.</p><h3 id="crontab-등록-방법"><a href="#crontab-등록-방법" class="headerlink" title="crontab 등록 방법"></a>crontab 등록 방법</h3><p>리눅스 서버에 접속해서</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -l</span><br></pre></td></tr></table></figure><p>명령어를 실행하면 아래 처럼 <strong>해당 유저</strong>로 서버에 등록된 스케줄들이 보이게 되는데 해당 유저로 등록된 서비스가 없다면 아래 처럼</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user명@ip-127.0.0.1:~$ crontab -l</span><br><span class="line">no crontab for user명</span><br></pre></td></tr></table></figure><p>메시지가 출력되고 해당 유저로 등록된 서버스가 존재 할 경우엔</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">user명@ip-127.0.0.1:~$ crontab -l</span><br><span class="line"><span class="meta">#</span><span class="bash"> Edit this file to introduce tasks to be run by cron.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Each task to run has to be defined through a single line</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> indicating with different fields when the task will be run</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and what <span class="built_in">command</span> to run <span class="keyword">for</span> the task</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> To define the time you can provide concrete values <span class="keyword">for</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> minute (m), hour (h), day of month (dom), month (mon),</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> and day of week (dow) or use <span class="string">&#x27;*&#x27;</span> <span class="keyword">in</span> these fields (<span class="keyword">for</span> <span class="string">&#x27;any&#x27;</span>).<span class="comment"># </span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Notice that tasks will be started based on the cron<span class="string">&#x27;s system</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> daemon<span class="string">&#x27;s notion of time and timezones.</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Output of the crontab <span class="built_in">jobs</span> (including errors) is sent through</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> email to the user the crontab file belongs to (unless redirected).</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For example, you can run a backup of all your user accounts</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> at 5 a.m every week with:</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For more information see the manual pages of crontab(5) and cron(8)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> </span></span><br><span class="line"><span class="meta">#</span><span class="bash"> m h  dom mon dow   <span class="built_in">command</span></span></span><br><span class="line">10 04 * * * bash 백업 실행 파일.sh</span><br></pre></td></tr></table></figure><p>위 처럼 cat 명령어를 실행 한 것 처럼 콘솔에 crontab의 내용이 보여지게 된다.<br>이렇게 저장된 스케줄러들을 확인난 후에</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e</span><br></pre></td></tr></table></figure><p>명령어를 통해 스케줄러를 등록하면 되는데 이 때 crontab -e 명령어를 실행시키면 crontab을 열 텍스트 에디터를 선택하라는 메시지가 출력되거나, 디폴트로 지정된 텍스트 에디터로 crontab이 열리게 된다.</p><p>어떤 식이든 crontab이 열리면</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">* * * * *  수행할 명령어</span><br><span class="line">┬ ┬ ┬ ┬ ┬</span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ │</span><br><span class="line">│ │ │ │ └───────── 요일 (0 - 6) (0:일요일, 1:월요일, 2:화요일, …, 6:토요일)</span><br><span class="line">│ │ │ └───────── 월 (1 - 12)</span><br><span class="line">│ │ └───────── 일 (1 - 31)</span><br><span class="line">│ └───────── 시 (0 - 23)</span><br><span class="line">└───────── 분 (0 - 59)</span><br></pre></td></tr></table></figure><p>위 형식에 맞춰 언제마다 실행 시킬 지 정한 후 우리가 만든 backup용 sh 파일을 실행하게 하면 된다.</p><p>필자는 매일 04시 10분에 실행 시키기 위해 아래와 같이 작성하여 등록했다.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 04 * * * bash 백업 실행 파일.sh</span><br></pre></td></tr></table></figure><p>이렇게 작성하고 테스트를 하기 위해 date 명령어로 서버 시간을 확인한 후 실행 시간을 현재 시간에서 2분 뒤로 변경하여 2분 뒤에 실행하게 하였는데…</p><hr><h2 id="왜-백업이-안되지…"><a href="#왜-백업이-안되지…" class="headerlink" title="왜 백업이 안되지…?"></a>왜 백업이 안되지…?</h2><img src="/2021/04/30/mysqldump%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-MySQL-backup/%EB%B0%B1%EC%97%85%EC%8B%A4%ED%8C%A8.png" class="" title="mysqldump를 활용한 MySQL backup 뎃? 어쨰서 파일 사이즈가...? 뎃? 어쨰서 파일 사이즈가...?"><p>이미지에서 보이는 것 처럼 파일 사이즈가 20 바이트 밖에 안되길래 확인해보니 백업이 정상적으로 이루어지지 않은 것 이었다.</p><p>왜 이렇게 됐을까를 고민하던 중… 스케줄러에 등록하기 전 sh파일을 단독으로 실행 했을 때 table 갯수만큼 비밀번호를 입력했던 것이 떠올라서 그 부분이 문제일 것이라고 판단되어 찾아보니 <a href="%5Bhttps://dev.mysql.com/doc/refman/8.0/en/password-security-user.html%5D(https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html)">공식 문서</a>에서 아래와 같은 글을 확인 할 수 있었다.</p><blockquote><p>Use the –password or -p option on the command line with no password value specified. In this case, the client program solicits the password interactively:</p><p>shell&gt; mysql -u francis -p db_name<br>Enter password: <strong>****</strong><br>The * characters indicate where you enter your password. The password is not displayed as you enter it.</p><p>It is more secure to enter your password this way than to specify it on the command line because it is not visible to other users. However, this method of entering a password is suitable only for programs that you run interactively. If you want to invoke a client from a script that runs noninteractively, there is no opportunity to enter the password from the keyboard. On some systems, you may even find that the first line of your script is read and interpreted (incorrectly) as your password.</p><footer><strong>Seth Godin</strong><cite><a href="https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html">6.1.2.1 End-User Guidelines for Password Security</a></cite></footer></blockquote><p>정리하면 —password 옵션은 클라이언트에 대화식으로 암호를 요청하고, 이 경우 비대화형으로 실행되는 스크립트에서 클라이언트를 호출 할 경우 암호를 입력 할 기회가 없으므로 일부 시스템에서 잘못 해석 될 수도 있다는 내용이었다.</p><h3 id="그래서-어떻게-해야되요…"><a href="#그래서-어떻게-해야되요…" class="headerlink" title="그래서 어떻게 해야되요…"></a>그래서 어떻게 해야되요…</h3><p>공식 문서를 보면 .my.cnf파일을 만들어서 거기에</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">password=password</span><br></pre></td></tr></table></figure><p>아래와 같은 형식으로 지정하고 안전을 위해 파일의 엑서스 모드를 400 또는, 600으로 설정하라고 한다.</p><p>그 후 mysqldump에서 지정한 설정 파일을 읽어들이게 하기 위해</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">shell&gt;</span><span class="bash"> mysql --defaults-file=/home/francis/mysql-opts</span></span><br></pre></td></tr></table></figure><p>처럼 파일의 전체 경로를 지정하라고 설명하고 있다.</p><h3 id="바뀐-sh파일-내용"><a href="#바뀐-sh파일-내용" class="headerlink" title="바뀐 sh파일 내용"></a>바뀐 sh파일 내용</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">HOST=host명</span><br><span class="line">USER=user명</span><br><span class="line">DATABASE=db명</span><br><span class="line">TABLES=(</span><br><span class="line">table1</span><br><span class="line">table2</span><br><span class="line">table3</span><br><span class="line">...</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">TABLES_STRING=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> TABLE <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;TABLES[@]&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">do</span> :</span><br><span class="line">   sudo mysqldump --single-transaction --databases <span class="variable">$&#123;DATABASE&#125;</span> --tables <span class="variable">$&#123;TABLE&#125;</span> --host <span class="variable">$&#123;HOST&#125;</span> --user <span class="variable">$&#123;USER&#125;</span> | gzip &gt; /home/backup/<span class="variable">$&#123;TABLE&#125;</span>.sql.gz</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>—password 옵션을 제외하고 password가 my.cnf 설정파일에 들어갔으므로 최종적인 sh 파일 내용은 위와 같이 된다.</p><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><img src="/2021/04/30/mysqldump%EB%A5%BC-%ED%99%9C%EC%9A%A9%ED%95%9C-MySQL-backup/%EC%84%B1%EA%B3%B5.png" class="" title="mysqldump를 활용한 MySQL backup 성공, 대성공! 성공, 대성공!"><p>모든 난관을 극복하고 다시 crontab -e에 등록해서 스케줄을 실행한 결과 위와 같이 정상적으로 백업을 완료하여 파일 사이즈가 아까와 다르게 20 byte가 아닌 모습을 볼 수 있다.</p><hr><h2 id="P-S-저는-그래도-안되는데요…"><a href="#P-S-저는-그래도-안되는데요…" class="headerlink" title="P.S : 저는 그래도 안되는데요…?"></a>P.S : 저는 그래도 안되는데요…?</h2><p>필자의 경우에도 .my.cnf 파일을 생성하고 등록해줬음에도 불구하고 백업이 정상적으로 진행되지 않았는데 결국 찾은 해결 방법은 .my.cnf 파일을 따로 생성하지 않고, 아래와 같이 /etc/mysql/my.cnf 파일에 password를 추가하는 방법으로 해결 했다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> One can use all long options that the program supports.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Run program with --<span class="built_in">help</span> to get a list of available options and with</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> --print-defaults to see <span class="built_in">which</span> it would actually understand and use.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> For explanations see</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> http://dev.mysql.com/doc/mysql/en/server-system-variables.html</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This will be passed to all mysql clients</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> It has been reported that passwords should be enclosed with ticks/quotes</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> escpecially <span class="keyword">if</span> they contain <span class="string">&quot;#&quot;</span> chars...</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Remember to edit /etc/mysql/debian.cnf when changing the socket location.</span></span><br><span class="line">[client]</span><br><span class="line">port= 3306</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">password        = password # !!! 이 부분 !!!</span><br><span class="line"><span class="meta">#</span><span class="bash"> Here is entries <span class="keyword">for</span> some specific programs</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The following values assume you have at least 32M ram</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> This was formally known as [safe_mysqld]. Both versions are currently parsed.</span></span><br><span class="line">[mysqld_safe]</span><br><span class="line">socket= /var/run/mysqld/mysqld.sock</span><br><span class="line">nice= 0</span><br><span class="line"></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>필자와 같은 경우도 아니라면… 행운을 빈다…</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html">MySQL 공식 사이트 mysqldump document</a></li><li><a href="https://woowabros.github.io/experience/2018/05/28/billingjul.html">우아한 형제들 기술 블로그 - 장애와 관련된 XtraBackup 적용기</a></li><li><a href="https://www.lesstif.com/dbms/mysqldump-db-backup-load-17105804.html">mysqldump 사용법(db backup 및 load 하기)</a></li><li><a href="https://musma.github.io/2019/02/12/mysql-dump-and-import.html">MySQL 데이터 dump(Export)/Import 하기</a></li><li><a href="%5Bhttps://tableplus.com/blog/2018/08/mysql-how-to-dump-database-ignore-tables-or-data-with-mysqldump.html%5D(https://tableplus.com/blog/2018/08/mysql-how-to-dump-database-ignore-tables-or-data-with-mysqldump.html)">How to dump database and ignore some tables with mysqldump?</a></li><li><a href="%5Bhttps://dev.mysql.com/doc/refman/8.0/en/password-security-user.html%5D(https://dev.mysql.com/doc/refman/8.0/en/password-security-user.html)">End-User Guidelines for Password Security</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;평소와 다름없이 유튜브를 배회하던 중 &lt;a href=&quot;https://www.youtube.com/watch?v=SWZcrdmm</summary>
      
    
    
    
    
    <category term="db" scheme="https://jungguji.github.io/tags/db/"/>
    
    <category term="mysql" scheme="https://jungguji.github.io/tags/mysql/"/>
    
    <category term="리눅스" scheme="https://jungguji.github.io/tags/%EB%A6%AC%EB%88%85%EC%8A%A4/"/>
    
  </entry>
  
  <entry>
    <title>org.junit.platform.commons.JUnitException: TestEngine with ID junit-vintage failed to discover tests</title>
    <link href="https://jungguji.github.io/2021/04/19/org-junit-platform-commons-JUnitException-TestEngine-with-ID-junit-vintage-failed-to-discover-tests/"/>
    <id>https://jungguji.github.io/2021/04/19/org-junit-platform-commons-JUnitException-TestEngine-with-ID-junit-vintage-failed-to-discover-tests/</id>
    <published>2021-04-19T13:09:46.000Z</published>
    <updated>2021-04-19T13:09:46.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>기존에 jar파일을 추가해서 Junit4로 테스트하던 프로젝트를 마찬가지로 jar파일을 Junit5로 버전 업해서 사용하고 있었는데<br>‘굳이 이럴 필요없이 maven 프로젝트로 변경하면 되지 않나?’라는 생각에 maven 프로젝트로 변경 후 발생했던 에러를 해결한 방법을 작성해둔다…</p><h2 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h2><p>위에서 적은 것 처럼 기존에 Junit jar를 다운받아서 직접 경로를 지정하는 방식으로 junit4, 5를 둘 다 사용하고 있었는데 프로젝트를 maven으로 변경 후 의존성 충돌이 발생해 아래와 같은 에러가 발생하며 테스트가 진행되지 않았다.</p><h3 id="발생한-에러"><a href="#발생한-에러" class="headerlink" title="발생한 에러"></a>발생한 에러</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Internal Error occurred.</span><br><span class="line">org.junit.platform.commons.JUnitException: TestEngine with ID <span class="string">&#x27;junit-vintage&#x27;</span> failed to discover tests</span><br><span class="line">  at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverEngineRoot(EngineDiscoveryOrchestrator.java:<span class="number">111</span>)</span><br><span class="line">  at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discover(EngineDiscoveryOrchestrator.java:<span class="number">85</span>)</span><br><span class="line">  at org.junit.platform.launcher.core.DefaultLauncher.discover(DefaultLauncher.java:<span class="number">92</span>)</span><br><span class="line">  at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:<span class="number">75</span>)</span><br><span class="line">  at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:<span class="number">71</span>)</span><br><span class="line">  at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:<span class="number">33</span>)</span><br><span class="line">  at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:<span class="number">220</span>)</span><br><span class="line">  at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:<span class="number">53</span>)</span><br><span class="line">Caused by: org.junit.platform.commons.JUnitException: Unsupported version of junit:junit: <span class="number">3.8</span>.<span class="number">1.</span> Please upgrade to version <span class="number">4.12</span> or later.</span><br><span class="line">  at org.junit.vintage.engine.JUnit4VersionCheck.checkSupported(JUnit4VersionCheck.java:<span class="number">49</span>)</span><br><span class="line">  at org.junit.vintage.engine.JUnit4VersionCheck.checkSupported(JUnit4VersionCheck.java:<span class="number">35</span>)</span><br><span class="line">  at org.junit.vintage.engine.VintageTestEngine.discover(VintageTestEngine.java:<span class="number">62</span>)</span><br><span class="line">  at org.junit.platform.launcher.core.EngineDiscoveryOrchestrator.discoverEngineRoot(EngineDiscoveryOrchestrator.java:<span class="number">103</span>)</span><br><span class="line">  ... <span class="number">7</span> more</span><br><span class="line"></span><br><span class="line">Process finished with exit code -<span class="number">2</span></span><br></pre></td></tr></table></figure><p>위 에러 로그처럼 ‘junit-vintage’를 아이디로 하는 테스트 엔진을 찾지 못했다는 에러가 발생해서 <a href="https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine">junit-vintage</a> 의존성을 추가해주었는데..</p><hr><h2 id="그-후-삽질"><a href="#그-후-삽질" class="headerlink" title="그 후 삽질"></a>그 후 삽질</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.junit.vintage/junit-vintage-engine --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>추가 해줘도 똑같은 에러만 반복 할 뿐이었다.</p><p>그래서 공식 문서를 살펴보니..</p><blockquote><p>JUnit 5 = JUnit Platform + JUnit Jupiter + JUnit Vintage</p><footer><strong>JUnit 5 User Guide</strong><cite><a href="https://junit.org/junit5/docs/current/user-guide/#overview-what-is-junit-5">What is JUnit 5?</a></cite></footer></blockquote><p>라고 떡하니 써 적혀있어서 위에 3 개의 의존성을 모두 추가한 후 리빌드 후 다시 테스트를 실행해봤다.</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- Only needed to run tests in a version of IntelliJ IDEA that bundles older versions --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.platform<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-platform-launcher<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.vintage<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-vintage-engine<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.7.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>하지만 결과는 마찬가지였고… .m2폴더에서 Junit 의존성을 다 삭제하고, Intellij project setting에서 Modules, Libraies에서 모두 삭제하고 이것저것 다 해봤지만 모두 실패로 돌아가서 결국 새 maven 프로젝트를 만들어서 하나씩 비교해보기로 했다.</p><hr><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>그 결과… .iml 파일에 아래 처럼 의존성들이 남아있는 것을 확인했고…</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;module-library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">library</span> <span class="attr">name</span>=<span class="string">&quot;JUnit5.4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">CLASSES</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.4.2/junit-jupiter-5.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.4.2/junit-jupiter-api-5.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.4.2/junit-platform-commons-1.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.4.2/junit-jupiter-params-5.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.4.2/junit-jupiter-engine-5.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">root</span> <span class="attr">url</span>=<span class="string">&quot;jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.4.2/junit-platform-engine-1.4.2.jar!/&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">CLASSES</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">JAVADOC</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">SOURCES</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">library</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">orderEntry</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.junit.jupiter:junit-jupiter-api:5.7.1&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.apiguardian:apiguardian-api:1.1.0&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.opentest4j:opentest4j:1.2.0&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.junit.platform:junit-platform-commons:1.7.1&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.junit.jupiter:junit-jupiter-engine:5.7.1&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">orderEntry</span> <span class="attr">type</span>=<span class="string">&quot;library&quot;</span> <span class="attr">scope</span>=<span class="string">&quot;TEST&quot;</span> <span class="attr">name</span>=<span class="string">&quot;Maven: org.junit.platform:junit-platform-engine:1.7.1&quot;</span> <span class="attr">level</span>=<span class="string">&quot;project&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>모든 의존성을 삭제 후 다시 Junit5만 의존성 추가하여 테스트를 실행하니…</p><img src="/2021/04/19/org-junit-platform-commons-JUnitException-TestEngine-with-ID-junit-vintage-failed-to-discover-tests/%EC%84%B1%EA%B3%B5.PNG" class="" title="org.junit.platform.commons.JUnitException: TestEngine with ID junit-vintage failed to discover tests"><p>드디어 성공적인 테스트를 완료 할 수 있었다.</p><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><p>project setting에서 분명 모듈 관련된 설정을 모두 삭제 했는데 왜 .iml파일에 설정이 삭제되지 않고 남아있는진 모르겠지만, 필자와 같은 상황이 발생하는 다른 사람들에게 도움이 되길 바라며 글을 마무리한다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;기존에 jar파일을 추가해서 Junit4로 테스트하던 프로젝트를 마찬가지로 jar파일을 Junit5로 버전 업해서 사용하고 있</summary>
      
    
    
    
    
    <category term="Junit" scheme="https://jungguji.github.io/tags/Junit/"/>
    
    <category term="개발" scheme="https://jungguji.github.io/tags/%EA%B0%9C%EB%B0%9C/"/>
    
    <category term="오류" scheme="https://jungguji.github.io/tags/%EC%98%A4%EB%A5%98/"/>
    
  </entry>
  
  <entry>
    <title>백준 2485번: 가로수</title>
    <link href="https://jungguji.github.io/2021/04/12/%EB%B0%B1%EC%A4%80-2485%EB%B2%88-%EA%B0%80%EB%A1%9C%EC%88%98/"/>
    <id>https://jungguji.github.io/2021/04/12/%EB%B0%B1%EC%A4%80-2485%EB%B2%88-%EA%B0%80%EB%A1%9C%EC%88%98/</id>
    <published>2021-04-12T13:16:19.000Z</published>
    <updated>2021-04-12T13:16:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/2485">https://www.acmicpc.net/problem/2485</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">    List&lt;Integer&gt; differences = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> preValue = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n = Integer.parseInt(br.readLine());</span><br><span class="line">    <span class="keyword">while</span> (n-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> input = Integer.parseInt(br.readLine());</span><br><span class="line">        list.add(input);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (preValue != <span class="number">0</span>) &#123;</span><br><span class="line">            differences.add(Math.abs(preValue - input));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        preValue = input;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Collections.sort(list);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> gcd = Integer.MAX_VALUE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; differences.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> temp = gcd(differences.get(i-<span class="number">1</span>), differences.get(i));</span><br><span class="line">        gcd = temp &gt; gcd ? gcd : temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> pre = list.get(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (list.get(i) - pre != gcd) &#123;</span><br><span class="line">            answer += ((list.get(i) - pre) / gcd) - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        pre = list.get(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(answer);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b!=<span class="number">0</span> ? gcd(b, a%b) : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>입력 받은 값들을 뺀 값의 차를 구한 값으로 약수를 구하기 위한 differences,<br>입력 받은 값을 그대로 저장하는 list 변수 생성.</li><li>두 리스트 모두 n 만큼 돌면서 값을 저장하는데</li><li>differences의 경우 첫 번쨰 루프에서 값을 저장 할 수 없으므로(2 번쨰 값부터 첫 번째 값과 뺄 수 있으므로) 이전 값이 있는 경우에만 리스트에 저장한다.</li><li>가로수들 사이에 끼워넣어야 되는 가로수의 개수를 구해야 하므로 입력 받은 가로수의 위치를 정렬한다.</li><li>가로수 간의 최소 간격을 구하기 위해 아까 저장한 가로수 간의 차이를 구한 리스트 differences를 돌면서 <a href="https://ko.wikipedia.org/wiki/%EC%9C%A0%ED%81%B4%EB%A6%AC%EB%93%9C_%ED%98%B8%EC%A0%9C%EB%B2%95">유클리드 호제법</a>을 이용해 최대공약수를 구하고, 구한 최대 공약수 중 가장 작은 값을 저장한다.</li><li>가로수 간의 차이값에서 최대 공약수를 구하는 이유는,</li><li>문제가 가로수를 일정한 간격으로 최대한 적게 심기게 하기 위한 문제 이므로 두 수에서 공통되는 값들 중 가장 큰 수인 최대 공약수를 구하고,</li><li>그 최대 공약수들 중 가장 작은 값이어야 모두 일정한 간격으로 심을 수 있으므로 최대 공약수 중 가장 작을 값을 구한다.</li><li>이렇게 잘 구한 값으로 이제 몇 개의 가로수를 더 심어야 하는지 알아내야 하므로</li><li>아까 정렬시킨 가로수 리스트를 반복 하면서 이전 가로수 와의 간격이 최대 공약수 보다 큰 녀석들이 있으면</li><li>그 녀석들 사이에 가로수를 심어야 되므로,</li><li>구한 간격을 최대 공약수로 나눈 값에서 -1 한 값을 더한다.</li><li>이 때 -1을 하는 이유는 두 수의 간격이므로 하나는 이미 심어져 있으니 -1 을 한다.</li><li>그렇게 추가로 심어야 하는 가로수의 개수를 모두 구하면</li><li>끝.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><img src="/2021/04/12/%EB%B0%B1%EC%A4%80-2485%EB%B2%88-%EA%B0%80%EB%A1%9C%EC%88%98/%EC%BA%A1%EC%B2%98.PNG" class="" title="백준 2485번: 가로수"><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/2485&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="재귀" scheme="https://jungguji.github.io/tags/%EC%9E%AC%EA%B7%80/"/>
    
    <category term="공약수" scheme="https://jungguji.github.io/tags/%EA%B3%B5%EC%95%BD%EC%88%98/"/>
    
  </entry>
  
  <entry>
    <title>백준 10527번: Judging Troubles</title>
    <link href="https://jungguji.github.io/2021/04/01/%EB%B0%B1%EC%A4%80-10527%EB%B2%88-Judging-Troubles/"/>
    <id>https://jungguji.github.io/2021/04/01/%EB%B0%B1%EC%A4%80-10527%EB%B2%88-Judging-Troubles/</id>
    <published>2021-04-01T13:51:49.000Z</published>
    <updated>2021-04-01T13:51:49.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/10527">https://www.acmicpc.net/problem/10527</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    <span class="keyword">int</span> n = Integer.parseInt(br.readLine());</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Boolean&gt; isDuplicate = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    Map&lt;String, Integer&gt; domJudge = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        String input = br.readLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isDuplicate.containsKey(input)) &#123;</span><br><span class="line">            isDuplicate.put(input, <span class="keyword">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        domJudge.put(input, domJudge.getOrDefault(input, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Integer&gt; kattis = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        String input = br.readLine();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isDuplicate.containsKey(input)) &#123;</span><br><span class="line">            isDuplicate.put(input, <span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        kattis.put(input, kattis.getOrDefault(input, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;Map.Entry&lt;String, Integer&gt;&gt; entries1 = <span class="keyword">new</span> ArrayList&lt;&gt;(domJudge.entrySet());</span><br><span class="line">    List&lt;Map.Entry&lt;String, Integer&gt;&gt; entries2 = <span class="keyword">new</span> ArrayList&lt;&gt;(kattis.entrySet());</span><br><span class="line"></span><br><span class="line">    entries1.addAll(entries2);</span><br><span class="line">    Collections.sort(entries1, (e1, e2) -&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span> (e1.getKey().compareTo(e2.getKey()) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (e1.getKey().compareTo(e2.getKey()) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> Integer.compare(e1.getValue(), e2.getValue());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line">    Set&lt;String&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; entries1.size(); i++) &#123;</span><br><span class="line">        Map.Entry&lt;String, Integer&gt; entry = entries1.get(i);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isDuplicate.getOrDefault(entry.getKey(), <span class="keyword">false</span>) &amp;&amp; set.add(entry.getKey())) &#123;</span><br><span class="line">            answer += entry.getValue();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(answer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ul><li>우선 이 문제는 domJudge와 kattis가 순서대로 n만큼씩 입력 받는 문제다.</li></ul><p>예제를 보며 얘기하면</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">correct</span><br><span class="line">wronganswer</span><br><span class="line">correct</span><br><span class="line">correct</span><br><span class="line">timelimit</span><br><span class="line">wronganswer</span><br><span class="line">correct</span><br><span class="line">timelimit</span><br><span class="line">correct</span><br><span class="line">timelimit</span><br></pre></td></tr></table></figure><p>이렇게 되어 있을 때 위에 다섯 줄은 domJudge에서 채점한 결과고, 그 아래 다섯 줄은 kattis 채점한 결과다.</p><p>이걸 생각하고 프로그램을 작성하면</p><ol><li>우선 양 쪽에서 채점된 결과들 중에 작은 녀석의 값을 골라야 하므로 채점 결과를 Key로 하는 Map을 만들고</li><li>n 만큼 돌면서 domJudge의 채점 결과를 저장하는데 이 때 처음나온 채점 결과는 Map에 false로 저장하고, 이전에 이미 나온 결과는 +1 해준다.</li><li>그 후 다시 n만큼 돌면서 kattis의 채점결과를 저장하는데</li><li>이 때는 전에 domJudge에서 나온 채점 결과 인지 확인해야 하므로 중복을 체크하기 위해 만든 Map에 채점 결과가 존재하면 그 key의 값을 true로 변경시켜서 양 쪽에서 모두 나온 결과 임을 저장한다.</li><li>그 후 양 쪽에서 모두 나온 채점 결과들 중 작은 값들을 더하기 위해</li><li>두 Map을 리스트로 변환 후 합쳐서 key와 value로 sorting 한다.</li><li>그 후 합친 리스트를 반복하면서..</li><li>채점 결과가 양 쪽 모두에서 나온 녀석이면서 이전에 더한 key가 아니라면 쭉 더하고</li><li>출력하고 끝낸다.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><img src="/2021/04/01/%EB%B0%B1%EC%A4%80-10527%EB%B2%88-Judging-Troubles/%EC%BA%A1%EC%B2%98.PNG" class="" title="백준 10527번: Judging Troubles"><hr><h2 id="다른-분의-코드"><a href="#다른-분의-코드" class="headerlink" title="다른 분의 코드"></a>다른 분의 코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    String line = br.readLine().trim();</span><br><span class="line">    <span class="keyword">int</span> n = Integer.parseInt(line);</span><br><span class="line">    Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        String dom = br.readLine();</span><br><span class="line">        map.put(dom, map.getOrDefault(dom, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        String kattis = br.readLine();</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(kattis) &amp;&amp; map.get(kattis) &gt; <span class="number">0</span>)&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            map.put(kattis, map.get(kattis) - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    System.out.println(cnt);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>나 처럼 바보 같이 Map을 여러 개 쓰지 않고 하나의 맵에 +1, -1로 해서 겹치는 결과 인지 아닌지 판단했다.</li><li>나는 왜 이렇게 생각하지 못했을까? 다른 곳에서도 흔히 쓰이는 방식인데</li><li>오늘도 역시 반성해본다…</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/10527&quot;&gt;https://www.acmicpc.ne</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="자료구조" scheme="https://jungguji.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
  </entry>
  
  <entry>
    <title>백준 1417번: 국회의원 선거</title>
    <link href="https://jungguji.github.io/2021/03/30/%EB%B0%B1%EC%A4%80-1417%EB%B2%88-%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90-%EC%84%A0%EA%B1%B0/"/>
    <id>https://jungguji.github.io/2021/03/30/%EB%B0%B1%EC%A4%80-1417%EB%B2%88-%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90-%EC%84%A0%EA%B1%B0/</id>
    <published>2021-03-30T12:38:30.000Z</published>
    <updated>2021-03-30T12:38:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/1417">https://www.acmicpc.net/problem/1417</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">    <span class="keyword">int</span> n = Integer.parseInt(br.readLine());</span><br><span class="line"></span><br><span class="line">    LinkedList&lt;Integer&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> dasom = Integer.parseInt(br.readLine());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n-<span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> input = Integer.parseInt(br.readLine());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dasom &lt;= input) &#123;</span><br><span class="line">            queue.offer(input);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Collections.sort(queue);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> answer = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (; !queue.isEmpty() &amp;&amp; queue.peekLast() &gt;= dasom; answer++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (queue.peek() &lt; dasom) &#123;</span><br><span class="line">            queue.poll();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        queue.offer((queue.pollLast()-<span class="number">1</span>));</span><br><span class="line">        dasom++;</span><br><span class="line"></span><br><span class="line">        Collections.sort(queue);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(answer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>다솜이는 기호 1번이므로 첫 번째 입력을 다솜이의 표로 저장한다.</li><li><a href="https://ko.wikipedia.org/wiki/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84_%ED%81%90">우선순위 큐</a>로 사용하기 위해 list에 입력들을 저장하는데 다솜이 보다 작을 경우엔 문제의 답과 상관이 없으므로 다솜이의 표보다 적은 표는 큐에 저장하지 않는다.</li><li>우선순위 큐로서 동작하게 하기 위해 반복 전에 큐를 한번 정렬시켜준다.</li><li>그 후엔 큐가 비거나, 큐의 가장 큰 값이 다솜이가 될 때까지 반복한다.</li><li>반복하면서 큐의 맨 앞이 다솜이보다 작다면, 이제 그 사람은 다솜이가 재낀 것 이므로 큐에서 빼주고,</li><li>제일 표가 많은 놈한테서 표 하나를 뻇어서 다솜이가 가져가면 되므로 큐의 마지막 값에서 -1 빼서 다시 큐에 넣어준다.</li><li>그리고 제일 표가 많은 놈에게 뺏은 표를 다솜이에게 줬으므로 다솜이의 값을 1 증가시키고</li><li>우선순위 큐 처럼 동작 할 수 있게 큐를 다시 정렬 시킨다.</li><li>반복된 횟수를 출력하면 끝.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><img src="/2021/03/30/%EB%B0%B1%EC%A4%80-1417%EB%B2%88-%EA%B5%AD%ED%9A%8C%EC%9D%98%EC%9B%90-%EC%84%A0%EA%B1%B0/%EC%BA%A1%EC%B2%98.PNG" class="" title="백준 1417번: 국회의원 선거"><hr><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><p>반복문에서 소팅을 하기 때문에 시간 초과가 날 것으로 예상했는데 수가 적은 문제라 그런지 무사히 통과되어 참 다행이다…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/1417&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
    <category term="자료구조" scheme="https://jungguji.github.io/tags/%EC%9E%90%EB%A3%8C%EA%B5%AC%EC%A1%B0/"/>
    
    <category term="우선순위 큐" scheme="https://jungguji.github.io/tags/%EC%9A%B0%EC%84%A0%EC%88%9C%EC%9C%84-%ED%81%90/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot + Vue CORS 설정</title>
    <link href="https://jungguji.github.io/2021/03/28/Spring%20Boot%20+%20Vue%20CORS%20%EC%84%A4%EC%A0%95/"/>
    <id>https://jungguji.github.io/2021/03/28/Spring%20Boot%20+%20Vue%20CORS%20%EC%84%A4%EC%A0%95/</id>
    <published>2021-03-28T09:40:28.000Z</published>
    <updated>2021-03-28T09:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>Front를 Vue.js, Back을 Spring Boot로 만든 토이 프로젝트에서 CORS로 인해 통신이 되지 않는 오류가 발생하여 문제를 해결한 방법을 작성 해둔다.</p><hr><h2 id="문제-상황"><a href="#문제-상황" class="headerlink" title="문제 상황"></a>문제 상황</h2><p>화면에서 체크박스를 클릭하면 서버로 requert를 보내고 서버에서 그에 맞는 response를 주는 방식에 간단한 프로젝트 인데 클릭 시 아래 이미지 처럼 ‘Network Error’라는 alert를 발생시키고 통신이 되지 않는 문제가 발생 하였고, 개발자 도구로 콘솔을 확인해보니 아래 이미지 처럼 ‘CORS Preflight Did Not Succeed’과</p><blockquote><p>교차 출처 요청 차단: 동일 출처 정책으로 인해 <a href="http://localhost:9312/frame%EC%97%90">http://localhost:9312/frame에</a> 있는 원격 자원을 차단하였습니다. (원인: CORS 사전 점검 응답 실패).</p></blockquote><p>라는 메시지가 출력된 것을 확인했다.</p><img src="/2021/03/28/Spring%20Boot%20+%20Vue%20CORS%20%EC%84%A4%EC%A0%95/error.PNG" class="" title="Spring Boot + Vue CORS 설정 CORS Error 에러 발생 CORS Error 에러 발생"><hr><h2 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h2><p>여러 가지 방법이 있겠지만 필자는 WebMvcConfigurer를 상속받아 설정을 추가해주는 방식으로 처리했다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.CorsRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebConfig</span> <span class="keyword">implements</span> <span class="title">WebMvcConfigurer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addCorsMappings</span><span class="params">(CorsRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addMapping(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .allowedOrigins(<span class="string">&quot;http://localhost:8080&quot;</span>)</span><br><span class="line">                .allowCredentials(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>위 코드 처럼 WebMvcConfigurer 를 상속받는 WebConfig class를 작성한다.</li><li>그 중 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/WebMvcConfigurer.html#addCorsMappings-org.springframework.web.servlet.config.annotation.CorsRegistry-">addCorsMappings()</a> 메서드를 override 한다.</li><li>CorsRegistry 클래스의 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/CorsRegistry.html#addMapping-java.lang.String-">addMapping()</a> 메서드를 통해 CORS 요청 처리를 활성화할 URL를 지정하는데 이 때 “/**” 같은 Ant 스타일 패턴이나 정확한 경로(ex /admin)를 지정하는 것도 가능하다.</li><li>그 후 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/config/annotation/CorsRegistration.html#allowedOrigins-java.lang.String...-">allowedOrigins()</a> 메서드에서 CORS 요청을 허용 할 URL를 지정한다.</li><li>참고로 allowCredentials 설정을 true로 줬는데 이렇게 Access-Control-Allow-Credentials를 true로 할 경우 allowedOrigins()에서 “*”로 해서 모든 요청에 대해 CORS를 허용 할 수 없다.</li></ol><p>이 방법 외엔 <a href="https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/CrossOrigin.html">@Crossorigin</a>을 이용해 개별 클래스 혹은 메서드에 CORS 요청 인증을 응답하도록 설정 하는 것도 가능하다.</p><h3 id="정상-동작한-모습"><a href="#정상-동작한-모습" class="headerlink" title="정상 동작한 모습"></a>정상 동작한 모습</h3><img src="/2021/03/28/Spring%20Boot%20+%20Vue%20CORS%20%EC%84%A4%EC%A0%95/%EC%A0%95%EC%83%81.PNG" class="" title="Spring Boot + Vue CORS 설정 정상적으로 통신하여 체크된 상황에 대한 코드를 응답한 모습 정상적으로 통신하여 체크된 상황에 대한 코드를 응답한 모습"><hr><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><p>이전에 개발 할 때는 설정하지 않아도 잘 됐던거 같은데 오랜만에 프로젝트를 클론받아 실행하니 동작하지 않아 당황했다… 왜 그럴까?</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://velog.io/@logqwerty/CORS">https://velog.io/@logqwerty/CORS</a></li><li><a href="https://developer.mozilla.org/ko/docs/Web/HTTP/CORS">https://developer.mozilla.org/ko/docs/Web/HTTP/CORS</a></li><li><a href="https://dev-pengun.tistory.com/entry/Spring-Boot-CORS-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0">https://dev-pengun.tistory.com/entry/Spring-Boot-CORS-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0</a></li><li><a href="https://reikop.com/springboot-vue-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B02/">https://reikop.com/springboot-vue-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%84%B8%ED%8C%85%ED%95%98%EA%B8%B02/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;Front를 Vue.js, Back을 Spring Boot로 만든 토이 프로젝트에서 CORS로 인해 통신이 되지 않는 오류가 </summary>
      
    
    
    
    
    <category term="Spring Boot" scheme="https://jungguji.github.io/tags/Spring-Boot/"/>
    
    <category term="Vue" scheme="https://jungguji.github.io/tags/Vue/"/>
    
    <category term="CORS" scheme="https://jungguji.github.io/tags/CORS/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 SSH 접속</title>
    <link href="https://jungguji.github.io/2021/03/27/Windows%2010%20SSH%20%EC%A0%91%EC%86%8D/"/>
    <id>https://jungguji.github.io/2021/03/27/Windows%2010%20SSH%20%EC%A0%91%EC%86%8D/</id>
    <published>2021-03-27T14:43:38.000Z</published>
    <updated>2021-03-27T14:43:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>집에서 서버에 접속할 일이 생겨서 평소처럼 ssh로 접속을 하려고 했는데..<br>접속이 되지 않아 당황했는데 미래의 나와, 다른 사람들은 이러지 않길 바라며 글을 남긴다.</p><hr><h2 id="접속-방법"><a href="#접속-방법" class="headerlink" title="접속 방법"></a>접속 방법</h2><p><strong>우선 .pem 파일이 존재하는 경로에 폴더명이 한글인 폴더가 존재하면 안된다.</strong></p><ol><li>설정의 앱 및 기능에서 선택적 기능을 선택</li><li>기능 추가를 선택하여 ssh를 검색해서 OpenSSH 클라이언트를 설치</li><li>SSH 이용 가능</li></ol><hr><h2 id="여담"><a href="#여담" class="headerlink" title="여담"></a>여담</h2><p>나의 경우엔 .pem 파일이 한글 폴더가 있는 경로에 존재해서 인식하지 못했던 문제였지만<br>혹시 모르니 SSH 클라이언트 설치방법도 작성해놓는다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;집에서 서버에 접속할 일이 생겨서 평소처럼 ssh로 접속을 하려고 했는데..&lt;br&gt;접속이 되지 않아 당황했는데 미래의 나와, </summary>
      
    
    
    
    
    <category term="SSH" scheme="https://jungguji.github.io/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>백준 4796번: 캠핑</title>
    <link href="https://jungguji.github.io/2021/03/25/%EB%B0%B1%EC%A4%80-4796%EB%B2%88-%EC%BA%A0%ED%95%91/"/>
    <id>https://jungguji.github.io/2021/03/25/%EB%B0%B1%EC%A4%80-4796%EB%B2%88-%EC%BA%A0%ED%95%91/</id>
    <published>2021-03-25T13:08:42.000Z</published>
    <updated>2021-03-25T13:08:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="문제"><a href="#문제" class="headerlink" title="문제"></a>문제</h2><p><a href="https://www.acmicpc.net/problem/4796">https://www.acmicpc.net/problem/4796</a></p><hr><h2 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line"></span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    String input = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">while</span> (!<span class="string">&quot;0 0 0&quot;</span>.equals(input = br.readLine())) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] lpv = convertStringArrayToIntegerArray(input.split(<span class="string">&quot; &quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> l = lpv[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> p = lpv[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> v = lpv[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        sb.append(<span class="string">&quot;Case &quot;</span>).append(++i).append(<span class="string">&quot;: &quot;</span>).append((v/p) * l + ((v%p) &gt; l ? l : (v%p))).append(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    System.out.println(sb);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[] convertStringArrayToIntegerArray(String[] args) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[args.length];</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (String str : args) &#123;</span><br><span class="line">        array[i++] = Integer.parseInt(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> array;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="흐름"><a href="#흐름" class="headerlink" title="흐름"></a>흐름</h2><ol><li>V일 중에 연속되는 P일 동안 L일 만큼 휴가를 사용 할 수 있으므로</li><li>V에서 P를 나눈 값에서 L일을 곱하면 사용 가능한 휴가 일수가 구해지고</li><li>L이 V일에서 P일을 나눈 값보다 작을 땐 L일 만큼 휴가를 더 갈 수 있고</li><li>큰 경우엔 V % P 일 만큼 갈 수 있으므로 구한 값을 더하면</li><li>총 휴가 일수를 구할 수 있다.</li></ol><hr><h2 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h2><img src="/2021/03/25/%EB%B0%B1%EC%A4%80-4796%EB%B2%88-%EC%BA%A0%ED%95%91/%EC%BA%A1%EC%B2%98.PNG" class="" title="백준 4796번: 캠핑">]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;문제&quot;&gt;&lt;a href=&quot;#문제&quot; class=&quot;headerlink&quot; title=&quot;문제&quot;&gt;&lt;/a&gt;문제&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://www.acmicpc.net/problem/4796&quot;&gt;https://www.acmicpc.net</summary>
      
    
    
    
    
    <category term="알고리즘" scheme="https://jungguji.github.io/tags/%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98/"/>
    
    <category term="그리디" scheme="https://jungguji.github.io/tags/%EA%B7%B8%EB%A6%AC%EB%94%94/"/>
    
    <category term="백준" scheme="https://jungguji.github.io/tags/%EB%B0%B1%EC%A4%80/"/>
    
  </entry>
  
  <entry>
    <title>Requestbody Annotation 사용 시 기본 생성자 필요</title>
    <link href="https://jungguji.github.io/2021/02/05/Requestbody-Annotation-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%84%EC%9A%94/"/>
    <id>https://jungguji.github.io/2021/02/05/Requestbody-Annotation-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%84%EC%9A%94/</id>
    <published>2021-02-05T13:39:20.000Z</published>
    <updated>2021-02-05T13:39:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>사실, 제목이 결론이다. @Requestbody Annotation을 사용하려면 반드시 해당 DTO에는 기본 생성자가 명시적으로 존재하여야 한다. 뭔가 설정을 잘못했는지는 모르겠지만 intellij 에서 stacktrace가 출력되지 않아 이 사실을 알 수 가 없어서 엄청나게 삽질을 했기에 내용을 정리한다…</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="상황"><a href="#상황" class="headerlink" title="상황"></a>상황</h3><p>controller 테스트에서 모든 조건을 맞췄는데도 500 에러가 발생하여 테스트를 통과하지 못하는 상황이었는데 @Requestbody annotation을 DTO가 아닌 HashMap으로 변경하니 테스트가 정상적으로 통과되어 JSON이 제대로 DTO로 매핑되지 않아서 발생하는 문제라고 판단했다.</p><h3 id="에러-발생"><a href="#에러-발생" class="headerlink" title="에러 발생"></a>에러 발생</h3><img src="/2021/02/05/Requestbody-Annotation-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%84%EC%9A%94/%EA%B8%B0%EB%B3%B8%EC%83%9D%EC%84%B1%EC%9E%90_%EC%97%90%EB%9F%AC.png" class="" title="Requestbody Annotation 사용 시 기본 생성자 필요 에러 발생 에러 발생"><blockquote><p>No suitable constructor found for type [simple type, class 클래스명]: can not instantiate from JSON object (missing default constructor or creator, or perhaps need to add/enable type information?)</p></blockquote><p>직역하면 기본 생성자가 존재하지 않아서 에러가 발생했다는 내용이다.</p><h3 id="해결-방법"><a href="#해결-방법" class="headerlink" title="해결 방법"></a>해결 방법</h3><p>빌더패턴을 사용하던 클래스에 @Noargsconstructor annotation을 사용해서 기본 생성자를 생성하게 하였다.</p><img src="/2021/02/05/Requestbody-Annotation-%EC%82%AC%EC%9A%A9-%EC%8B%9C-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90-%ED%95%84%EC%9A%94/%EC%84%B1%EA%B3%B5.png" class="" title="Requestbody Annotation 사용 시 기본 생성자 필요 성공 테스트 성공"><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>@Requestbody와 DTO를 매핑되게 해야 할 경우 많은 조건이 필요하다.<br>이전 포스트에 작성했던 boolean의 변수명이라던가, 지금과 같은 기본 생성자라 라던지… 이게 모두 @Requestbody가 jackson 라이브러리를 이용해 매핑하기 때문이다. </p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://velog.io/@conatuseus/RequestBody%EC%97%90-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90%EB%8A%94-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%800">https://velog.io/@conatuseus/RequestBody%EC%97%90-%EA%B8%B0%EB%B3%B8-%EC%83%9D%EC%84%B1%EC%9E%90%EB%8A%94-%EC%99%9C-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;사실, 제목이 결론이다. @Requestbody Annotation을 사용하려면 반드시 해당 DTO에는 기본 생성자가 명시적으</summary>
      
    
    
    
    
    <category term="Junit" scheme="https://jungguji.github.io/tags/Junit/"/>
    
    <category term="Test" scheme="https://jungguji.github.io/tags/Test/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot Heroku에 배포하기</title>
    <link href="https://jungguji.github.io/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/"/>
    <id>https://jungguji.github.io/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/</id>
    <published>2021-01-28T12:07:20.000Z</published>
    <updated>2021-01-28T12:07:20.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>AWS 프리티어는 이미 다른 서비스가 이용하고 있고 Java를 지원해주는 클라우드 서비스가 없었는데 <a href="https://www.heroku.com/">heroku</a>를 발견하여 사용방법을 정리 해둔다.</p><p><strong>참고로 데이터베이스는 한글을 지원하지 않는다.</strong></p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><ol><li>heroku 회원 가입</li></ol><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/%ED%9A%8C%EC%9B%90%EA%B0%80%EC%9E%85.PNG" class="" title="Spring boot Heroku에 배포하기 회원가입 회원가입"><ol start="2"><li>App 생성</li></ol><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/new_app.PNG" class="" title="Spring boot Heroku에 배포하기 Create a new app Create a new app"><p>위에 보이는 create a new app 버튼을 클릭하고</p><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/image.png" class="" title="Spring boot Heroku에 배포하기 app 이름 지정 app 이름 지정"><p>App name을 지정해야 하는데 이미 heroku에 존재하는 service의 name은 생성 할 수 없고,<br>여기서 지정한 App name으로 호스팅 될 URL이 생성된다.</p><ul><li>ex) appname : backjoonframeautomaticgenerat<br>  URL : <a href="https://backjoonframeautomaticgenerat.herokuapp.com/">https://backjoonframeautomaticgenerat.herokuapp.com/</a></li></ul><ol start="3"><li>heroku CLI 설치</li></ol><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/CLI_%EC%84%A4%EC%B9%98.png" class="" title="Spring boot Heroku에 배포하기 Heroku CLI 설치 Heroku CLI 설치"><p>생성이 완료되면 위 화면처럼 Deploy tab으로 이동되는데 설명되어 있는 것 처럼 먼저 <a href="https://devcenter.heroku.com/articles/heroku-cli">Heroku CLI</a>를 자신의 OS 버전에 맞게 설치한다.</p><ol start="4"><li>Procfile 생성</li></ol><p>Heroku는 실행 할 때 마다 port를 자동으로 지정해주는데 port를 고정시키기 위해 우선 <a href="https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto-use-short-command-line-arguments">application.properties에 port를 바인딩</a> 해준다.</p><h3 id="application-properties"><a href="#application-properties" class="headerlink" title="application.properties"></a>application.properties</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server.port=$&#123;port:<span class="number">8080</span>&#125;</span><br></pre></td></tr></table></figure><p>그 후 Procfile을 Project 루트 디렉토리에 확장자 없이 생성하고 아래와 같이 작성한다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">web: java -Dserver.port=$PORT $JAVA_OPTS -jar [실행될 jar파일 경로]</span><br></pre></td></tr></table></figure><h3 id="Procfile의-경로"><a href="#Procfile의-경로" class="headerlink" title="Procfile의 경로"></a>Procfile의 경로</h3><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/Procfile_%EA%B2%BD%EB%A1%9C.png" class="" title="Spring boot Heroku에 배포하기 Procfile의 경로 Procfile의 경로 루트 디렉토리에 오도록 작성한다."><ol start="5"><li>배포</li></ol><p>이후엔 heroku의 가이드를 그대로 따라하면 된다.</p><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/%EB%B0%B0%ED%8F%AC%EC%99%84%EB%A3%8C.png" class="" title="Spring boot Heroku에 배포하기 배포 완료 배포 완료"><p>모든 가이드를 정상적으로 잘 따라하면 위 처럼 접속할 수 있는 URL이 출력되고 해당 URL로 접속하면</p><ol start="6"><li>확인</li></ol><p><a href="https://backjoonframeautomaticgenerat.herokuapp.com/">https://backjoonframeautomaticgenerat.herokuapp.com/</a></p><img src="/2021/01/28/Spring-boot-Heroku%EC%97%90-%EB%B0%B0%ED%8F%AC%ED%95%98%EA%B8%B0/%ED%99%95%EC%9D%B8.PNG" class="" title="Spring boot Heroku에 배포하기 확인 배포가 마무리된 모습"><p>정상적으로 실행되어 서비스가 실행되는 것을 확인 할 수 있다.</p><hr><h2 id="결론"><a href="#결론" class="headerlink" title="결론"></a>결론</h2><p>데이터베이스를 사용하지 않는 서비스나, 한글이 입력되지 않는 서비스의 경우 무료로 이용 할 수 있는 좋은 클라우드 서비스 인 것 같다.</p><p>참고로 30분간 접속이 없으면 휴면 모드로 전환되어 최초 접속이 다소 느릴 수 있으나 무료 서비스인 만큼 그정도는 감안해주자.</p><p>이 글에 소개한 CLI를 이용한 방법 말고 Github와 연결해서 branch에 push하면 자동으로 배포되게 할 수 도 있는 것 같으니 찾아보고 적용하면 이 방법 보다 더 편할 것이다.</p><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="https://jeong-pro.tistory.com/182">https://jeong-pro.tistory.com/182</a></li><li><a href="https://wedul.site/590">https://wedul.site/590</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;AWS 프리티어는 이미 다른 서비스가 이용하고 있고 Java를 지원해주는 클라우드 서비스가 없었는데 &lt;a href=&quot;https</summary>
      
    
    
    
    
    <category term="Spring boot" scheme="https://jungguji.github.io/tags/Spring-boot/"/>
    
    <category term="Heroku" scheme="https://jungguji.github.io/tags/Heroku/"/>
    
    <category term="Could" scheme="https://jungguji.github.io/tags/Could/"/>
    
  </entry>
  
  <entry>
    <title>failed to lazily initialize a collection of role</title>
    <link href="https://jungguji.github.io/2021/01/22/failed-to-lazily-initialize-a-collection-of-role/"/>
    <id>https://jungguji.github.io/2021/01/22/failed-to-lazily-initialize-a-collection-of-role/</id>
    <published>2021-01-22T13:31:53.000Z</published>
    <updated>2021-01-22T13:31:53.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>연관관계에 있는 객체를 가져와서 set 하는 메서드를 테스트 하는 도중 아래와 같은 에러가 발생하였다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="해당-에러"><a href="#해당-에러" class="headerlink" title="해당 에러"></a>해당 에러</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">org.hibernate.LazyInitializationException: failed to lazily initialize a collection of role: com.jjlee.wedding.payment.domain.Cost.costOptions, no session or session was closed</span><br><span class="line"></span><br><span class="line">at org.hibernate.collection.AbstractPersistentCollection.throwLazyInitializationException(AbstractPersistentCollection.java:<span class="number">383</span>)</span><br><span class="line">at org.hibernate.collection.AbstractPersistentCollection.throwLazyInitializationExceptionIfNotConnected(AbstractPersistentCollection.java:<span class="number">375</span>)</span><br><span class="line">at org.hibernate.collection.AbstractPersistentCollection.readSize(AbstractPersistentCollection.java:<span class="number">122</span>)</span><br><span class="line">at org.hibernate.collection.PersistentBag.size(PersistentBag.java:<span class="number">248</span>)</span><br><span class="line">at com.xxxxxx.ImplTest.가져와서_셋해야하는지_테스트(CostServiceImplTest.java:<span class="number">89</span>)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)</span><br><span class="line">at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:<span class="number">43</span>)</span><br><span class="line">at java.lang.reflect.Method.invoke(Method.java:<span class="number">498</span>)</span><br><span class="line">at org.junit.runners.model.FrameworkMethod$<span class="number">1.</span>runReflectiveCall(FrameworkMethod.java:<span class="number">59</span>)</span><br><span class="line">at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:<span class="number">12</span>)</span><br><span class="line">at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:<span class="number">56</span>)</span><br><span class="line">at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:<span class="number">17</span>)</span><br><span class="line">at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:<span class="number">26</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:<span class="number">75</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:<span class="number">86</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:<span class="number">84</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:<span class="number">366</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">252</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">94</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">4.</span>run(ParentRunner.java:<span class="number">331</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">1.</span>schedule(ParentRunner.java:<span class="number">79</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:<span class="number">329</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.access$<span class="number">100</span>(ParentRunner.java:<span class="number">66</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">2.</span>evaluate(ParentRunner.java:<span class="number">293</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:<span class="number">61</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:<span class="number">70</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">3.</span>evaluate(ParentRunner.java:<span class="number">306</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.run(ParentRunner.java:<span class="number">413</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:<span class="number">191</span>)</span><br><span class="line">at org.junit.runner.JUnitCore.run(JUnitCore.java:<span class="number">137</span>)</span><br><span class="line">at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:<span class="number">68</span>)</span><br><span class="line">at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:<span class="number">33</span>)</span><br><span class="line">at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:<span class="number">230</span>)</span><br><span class="line">at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:<span class="number">58</span>)</span><br></pre></td></tr></table></figure><p>이 때 디버깅을 해보면 연결된 entitiy에서</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Unable to evaluate the expression Method threw <span class="string">&#x27;org.hibernate.LazyInitializationException&#x27;</span> exception.</span><br></pre></td></tr></table></figure><p>라는 에러가 발생해 있는데 이는 결국 select 한 entitiy가 영속성 컨텍스트 내에 존재하지 않기 때문에 발생한 애러이다.<br>위 에러에서 말하는 세션이 바로 영속성 컨텍스트를 말하는 것이고, 이는 한 트랜잭션안에 해당 entitiy가 존재하지 않다는 것과 같은 말이다.</p><h3 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h3><p>이를 해결하기 위해선 현재 지연로딩으로 되어있는 연관관계를 즉시로딩으로 변경하여 한번에 가져오던가,<br>혹은 Test 메서드에 @Transactional 어노테이션을 줘서 트랜잭션 내에 존재하도록 해주면 테스트가 정상적으로 통과되게 된다.</p><h3 id="결과"><a href="#결과" class="headerlink" title="결과"></a>결과</h3><hr><h2 id="참고-사이트"><a href="#참고-사이트" class="headerlink" title="참고 사이트"></a>참고 사이트</h2><ul><li><a href="%5Bhttps://bebong.tistory.com/entry/JPA-Lazy-Evaluation-LazyInitializationException-could-not-initialize-proxy-%E2%80%93-no-Session%5D(https://bebong.tistory.com/entry/JPA-Lazy-Evaluation-LazyInitializationException-could-not-initialize-proxy-%E2%80%93-no-Session)"><a href="https://bebong.tistory.com/entry/JPA-Lazy-Evaluation-LazyInitializationException-could-not-initialize-proxy-%E2%80%93-no-Session">https://bebong.tistory.com/entry/JPA-Lazy-Evaluation-LazyInitializationException-could-not-initialize-proxy-–-no-Session</a></a></li><li><a href="%5Bhttps://ankonichijyou.tistory.com/entry/JPA-OneToMany-%EC%98%A4%EB%A5%98%5D(https://ankonichijyou.tistory.com/entry/JPA-OneToMany-%EC%98%A4%EB%A5%98)"><a href="https://ankonichijyou.tistory.com/entry/JPA-OneToMany-%EC%98%A4%EB%A5%98">https://ankonichijyou.tistory.com/entry/JPA-OneToMany-오류</a></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;연관관계에 있는 객체를 가져와서 set 하는 메서드를 테스트 하는 도중 아래와 같은 에러가 발생하였다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2</summary>
      
    
    
    
    
    <category term="Junit" scheme="https://jungguji.github.io/tags/Junit/"/>
    
    <category term="JPA" scheme="https://jungguji.github.io/tags/JPA/"/>
    
  </entry>
  
  <entry>
    <title>Junit4 설정 주입 에러</title>
    <link href="https://jungguji.github.io/2021/01/12/Junit4-%EC%84%A4%EC%A0%95-%EC%A3%BC%EC%9E%85-%EC%97%90%EB%9F%AC/"/>
    <id>https://jungguji.github.io/2021/01/12/Junit4-%EC%84%A4%EC%A0%95-%EC%A3%BC%EC%9E%85-%EC%97%90%EB%9F%AC/</id>
    <published>2021-01-12T12:45:32.000Z</published>
    <updated>2021-01-12T12:45:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="서론"><a href="#서론" class="headerlink" title="서론"></a>서론</h2><p>현재 작업 중인 프로젝트에서 테스트 코드를 작성해 테스트할 일이 있었는데 프로젝트의 환경은 spring 4.3에 Junit 4.8이었다.</p><p>이에 원래 사용하던 junit5로 넘어갈까 하였으나 junit5를 사용하려면 설정을 spring boot으로 해야 한다는 글들이 있어 같은 테스트 환경을 만들기 위해 junit만 4.12 버전으로 업그레이드한 후 테스트를 진행하였는데 spring 프로젝트지만 config 설정들을 boot 처럼 java 파일로 관리하는 형태여서 java 파일과 properties 파일을 동시에 잡아 줄 필요가 있었는데<br>@Contextconfiguration(classes = {블라블라…}, locations = {블라블라…})로 잡으니 에러가 발생하여 해결한 방법을 작성해놓는다.</p><hr><h2 id="본론"><a href="#본론" class="headerlink" title="본론"></a>본론</h2><h3 id="코드"><a href="#코드" class="headerlink" title="코드"></a>코드</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ContextConfiguration(classes = &#123;</span></span><br><span class="line"><span class="meta">        DatabaseConfig.class,</span></span><br><span class="line"><span class="meta">        SecurityConfig.class,</span></span><br><span class="line"><span class="meta">        SocialConfig.class,</span></span><br><span class="line"><span class="meta">        EnumConfig.class,</span></span><br><span class="line"><span class="meta">        WebMvcConfig.class</span></span><br><span class="line"><span class="meta">&#125;, locations = &quot;classpath:properties/test.properties&quot;)</span></span><br></pre></td></tr></table></figure><p>서론에 적은 것 처럼 classes와 locations를 둘 다 설정하였더니 아래와 같이 에러가 발생하였다.</p><h3 id="에러"><a href="#에러" class="headerlink" title="에러"></a>에러</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalArgumentException: Cannot process locations AND classes <span class="keyword">for</span> context configuration [ContextConfigurationAttributes@64c87930 declaringClass = <span class="string">&#x27;com.xxxx.xxxImplTest&#x27;</span>, classes = <span class="string">&#x27;&#123;class com.xxxx.config.DatabaseConfig, class com.xxx.config.SecurityConfig, class com.xxx.config.SocialConfig, class com.xxx.config.EnumConfig, class com.xxx.config.WebMvcConfig&#125;&#x27;</span>, locations = <span class="string">&#x27;&#123;classpath:properties/test.properties&#125;&#x27;</span>, inheritLocations = <span class="keyword">true</span>, initializers = <span class="string">&#x27;&#123;&#125;&#x27;</span>, inheritInitializers = <span class="keyword">true</span>, name = [<span class="keyword">null</span>], contextLoaderClass = <span class="string">&#x27;org.springframework.test.context.ContextLoader&#x27;</span>]: configure one or the other, but not both.</span><br><span class="line"></span><br><span class="line">at org.springframework.util.Assert.isTrue(Assert.java:<span class="number">68</span>)</span><br><span class="line">at org.springframework.test.context.support.AbstractDelegatingSmartContextLoader.processContextConfiguration(AbstractDelegatingSmartContextLoader.java:<span class="number">154</span>)</span><br><span class="line">at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:<span class="number">371</span>)</span><br><span class="line">at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildMergedContextConfiguration(AbstractTestContextBootstrapper.java:<span class="number">305</span>)</span><br><span class="line">at org.springframework.test.context.support.AbstractTestContextBootstrapper.buildTestContext(AbstractTestContextBootstrapper.java:<span class="number">112</span>)</span><br><span class="line">at org.springframework.test.context.TestContextManager.&lt;init&gt;(TestContextManager.java:<span class="number">120</span>)</span><br><span class="line">at org.springframework.test.context.TestContextManager.&lt;init&gt;(TestContextManager.java:<span class="number">105</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTestContextManager(SpringJUnit4ClassRunner.java:<span class="number">152</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.&lt;init&gt;(SpringJUnit4ClassRunner.java:<span class="number">143</span>)</span><br><span class="line">at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)</span><br><span class="line">at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:<span class="number">62</span>)</span><br><span class="line">at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:<span class="number">45</span>)</span><br><span class="line">at java.lang.reflect.Constructor.newInstance(Constructor.java:<span class="number">423</span>)</span><br><span class="line">at org.junit.internal.builders.AnnotatedBuilder.buildRunner(AnnotatedBuilder.java:<span class="number">104</span>)</span><br><span class="line">at org.junit.internal.builders.AnnotatedBuilder.runnerForClass(AnnotatedBuilder.java:<span class="number">86</span>)</span><br><span class="line">at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:<span class="number">70</span>)</span><br><span class="line">at org.junit.internal.builders.AllDefaultPossibilitiesBuilder.runnerForClass(AllDefaultPossibilitiesBuilder.java:<span class="number">37</span>)</span><br><span class="line">at org.junit.runners.model.RunnerBuilder.safeRunnerForClass(RunnerBuilder.java:<span class="number">70</span>)</span><br><span class="line">at org.junit.internal.requests.ClassRequest.createRunner(ClassRequest.java:<span class="number">28</span>)</span><br><span class="line">at org.junit.internal.requests.MemoizingRequest.getRunner(MemoizingRequest.java:<span class="number">19</span>)</span><br><span class="line">at org.junit.internal.requests.FilterRequest.getRunner(FilterRequest.java:<span class="number">36</span>)</span><br><span class="line">at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:<span class="number">49</span>)</span><br><span class="line">at com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:<span class="number">33</span>)</span><br><span class="line">at com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:<span class="number">230</span>)</span><br><span class="line">at com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:<span class="number">58</span>)</span><br></pre></td></tr></table></figure><hr><h2 id="해결"><a href="#해결" class="headerlink" title="해결"></a>해결</h2><p>@Testpropertysource(classpath:””)로 test properties를 잡아주고<br>@Contextconfiguration(classes = { XXXConfig.class}) 로 Java config 파일들을 잡아준다.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ContextConfiguration(classes = &#123;</span></span><br><span class="line"><span class="meta">        DatabaseConfig.class,</span></span><br><span class="line"><span class="meta">        SecurityConfig.class,</span></span><br><span class="line"><span class="meta">        SocialConfig.class,</span></span><br><span class="line"><span class="meta">        EnumConfig.class,</span></span><br><span class="line"><span class="meta">        WebMvcConfig.class</span></span><br><span class="line"><span class="meta">&#125;)</span></span><br><span class="line"><span class="meta">@Testpropertysource(&quot;classpath:properties/test.properties&quot;)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;서론&quot;&gt;&lt;a href=&quot;#서론&quot; class=&quot;headerlink&quot; title=&quot;서론&quot;&gt;&lt;/a&gt;서론&lt;/h2&gt;&lt;p&gt;현재 작업 중인 프로젝트에서 테스트 코드를 작성해 테스트할 일이 있었는데 프로젝트의 환경은 spring 4.3에 Junit 4</summary>
      
    
    
    
    
    <category term="Junit" scheme="https://jungguji.github.io/tags/Junit/"/>
    
    <category term="Test" scheme="https://jungguji.github.io/tags/Test/"/>
    
    <category term="Spring" scheme="https://jungguji.github.io/tags/Spring/"/>
    
  </entry>
  
</feed>
